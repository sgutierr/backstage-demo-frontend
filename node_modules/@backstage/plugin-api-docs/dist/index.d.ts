/// <reference types="react" />
import * as _backstage_core_components from '@backstage/core-components';
import { TableColumn, TableProps, InfoCardVariants } from '@backstage/core-components';
import { CatalogTableRow } from '@backstage/plugin-catalog';
import { UserListFilterKind } from '@backstage/plugin-catalog-react';
import React from 'react';
import { ApiEntity } from '@backstage/catalog-model';
import * as _backstage_core_plugin_api from '@backstage/core-plugin-api';

/**
 * DefaultApiExplorerPageProps
 * @public
 */
type DefaultApiExplorerPageProps = {
    initiallySelectedFilter?: UserListFilterKind;
    columns?: TableColumn<CatalogTableRow>[];
    actions?: TableProps<CatalogTableRow>['actions'];
};
/**
 * DefaultApiExplorerPage
 * @public
 */
declare const DefaultApiExplorerPage: (props: DefaultApiExplorerPageProps) => JSX.Element;

/**
 * ApiExplorerPage
 * @public
 */
declare const ApiExplorerPage$1: (props: DefaultApiExplorerPageProps) => JSX.Element;

/** @public */
declare const ApiDefinitionCard: () => JSX.Element;

/** @public */
type ApiDefinitionWidget = {
    type: string;
    title: string;
    component: (definition: string) => React.ReactElement;
    rawLanguage?: string;
};
/** @public */
declare function defaultDefinitionWidgets(): ApiDefinitionWidget[];

/**
 * @public
 */
declare const ApiTypeTitle: (props: {
    apiEntity: ApiEntity;
}) => JSX.Element;

/**
 * A dialog that lets users inspect the API definition.
 *
 * @public
 */
declare function ApiDefinitionDialog(props: {
    open: boolean;
    entity: ApiEntity;
    onClose: () => void;
}): JSX.Element;

/**
 * @public
 */
declare const ConsumedApisCard: (props: {
    variant?: InfoCardVariants;
    columns?: TableColumn<ApiEntity>[];
}) => JSX.Element;

/**
 * @public
 */
declare const HasApisCard: (props: {
    variant?: InfoCardVariants;
    columns?: TableColumn<ApiEntity>[];
}) => JSX.Element;

/**
 * @public
 */
declare const ProvidedApisCard: (props: {
    variant?: InfoCardVariants;
    columns?: TableColumn<ApiEntity>[];
}) => JSX.Element;

/** @public */
type AsyncApiDefinitionWidgetProps = {
    definition: string;
};
/** @public */
declare const AsyncApiDefinitionWidget: (props: AsyncApiDefinitionWidgetProps) => JSX.Element;

/**
 * @public
 */
declare const ConsumingComponentsCard: (props: {
    variant?: InfoCardVariants;
}) => JSX.Element;

/** @public */
declare const ProvidingComponentsCard: (props: {
    variant?: InfoCardVariants;
}) => JSX.Element;

/** @public */
type GraphQlDefinitionWidgetProps = {
    definition: string;
};
/** @public */
declare const GraphQlDefinitionWidget: (props: GraphQlDefinitionWidgetProps) => JSX.Element;

/** @public */
type OpenApiDefinitionWidgetProps = {
    definition: string;
};
/** @public */
declare const OpenApiDefinitionWidget: (props: OpenApiDefinitionWidgetProps) => JSX.Element;

/** @public */
type PlainApiDefinitionWidgetProps = {
    definition: any;
    language: string;
};
/** @public */
declare const PlainApiDefinitionWidget: (props: PlainApiDefinitionWidgetProps) => JSX.Element;

/** @public */
type TrpcApiDefinitionWidgetProps = {
    definition: string;
};
/** @public */
declare const TrpcApiDefinitionWidget: (props: TrpcApiDefinitionWidgetProps) => JSX.Element;

/** @public */
declare const apiDocsConfigRef: _backstage_core_plugin_api.ApiRef<ApiDocsConfig>;
/** @public */
interface ApiDocsConfig {
    getApiDefinitionWidget: (apiEntity: ApiEntity) => ApiDefinitionWidget | undefined;
}

/** @public */
declare const apiDocsPlugin: _backstage_core_plugin_api.BackstagePlugin<{
    root: _backstage_core_plugin_api.RouteRef<undefined>;
}, {
    registerApi: _backstage_core_plugin_api.ExternalRouteRef<undefined, true>;
}, {}>;
/** @public */
declare const ApiExplorerPage: (props: DefaultApiExplorerPageProps) => JSX.Element;
/** @public */
declare const EntityApiDefinitionCard: () => JSX.Element;
/** @public */
declare const EntityConsumedApisCard: (props: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
    columns?: _backstage_core_components.TableColumn<ApiEntity>[] | undefined;
}) => JSX.Element;
/** @public */
declare const EntityConsumingComponentsCard: (props: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
}) => JSX.Element;
/** @public */
declare const EntityProvidedApisCard: (props: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
    columns?: _backstage_core_components.TableColumn<ApiEntity>[] | undefined;
}) => JSX.Element;
/** @public */
declare const EntityProvidingComponentsCard: (props: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
}) => JSX.Element;
/** @public */
declare const EntityHasApisCard: (props: {
    variant?: _backstage_core_components.InfoCardVariants | undefined;
    columns?: _backstage_core_components.TableColumn<ApiEntity>[] | undefined;
}) => JSX.Element;

export { ApiDefinitionCard, ApiDefinitionDialog, ApiDefinitionWidget, ApiDocsConfig, ApiExplorerPage$1 as ApiExplorerIndexPage, ApiExplorerPage, ApiTypeTitle, AsyncApiDefinitionWidget, AsyncApiDefinitionWidgetProps, ConsumedApisCard, ConsumingComponentsCard, DefaultApiExplorerPage, DefaultApiExplorerPageProps, EntityApiDefinitionCard, EntityConsumedApisCard, EntityConsumingComponentsCard, EntityHasApisCard, EntityProvidedApisCard, EntityProvidingComponentsCard, GraphQlDefinitionWidget, GraphQlDefinitionWidgetProps, HasApisCard, OpenApiDefinitionWidget, OpenApiDefinitionWidgetProps, PlainApiDefinitionWidget, PlainApiDefinitionWidgetProps, ProvidedApisCard, ProvidingComponentsCard, TrpcApiDefinitionWidget, TrpcApiDefinitionWidgetProps, apiDocsConfigRef, apiDocsPlugin, defaultDefinitionWidgets, apiDocsPlugin as plugin };
