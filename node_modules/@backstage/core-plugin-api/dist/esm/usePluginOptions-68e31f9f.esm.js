import { createVersionedContext, createVersionedValueMap, useVersionedContext } from '@backstage/version-bridge';
import React from 'react';

const contextKey = "plugin-context";
const PluginProvider = (props) => {
  const { children, plugin } = props;
  const { Provider } = createVersionedContext(contextKey);
  return /* @__PURE__ */ React.createElement(
    Provider,
    {
      value: createVersionedValueMap({
        1: {
          plugin
        }
      })
    },
    children
  );
};
function usePluginOptions() {
  const versionedHolder = useVersionedContext(
    contextKey
  );
  if (!versionedHolder) {
    throw new Error("Plugin Options context is not available");
  }
  const value = versionedHolder.atVersion(1);
  if (!value) {
    throw new Error("Plugin Options v1 is not available");
  }
  return value.plugin.getPluginOptions();
}

export { PluginProvider as P, usePluginOptions as u };
//# sourceMappingURL=usePluginOptions-68e31f9f.esm.js.map
