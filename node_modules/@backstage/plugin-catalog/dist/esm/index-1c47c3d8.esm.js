import { useEntity } from '@backstage/plugin-catalog-react';
import LanguageIcon from '@material-ui/icons/Language';
import React from 'react';
import { makeStyles, Typography, Button } from '@material-ui/core';
import { CodeSnippet, InfoCard } from '@backstage/core-components';
import { L as LinksGridList } from './index-06f6e8ce.esm.js';
import { useApp } from '@backstage/core-plugin-api';
import 'zen-observable';
import '@backstage/catalog-model';
import 'lodash';
import '@backstage/integration-react';
import '@material-ui/icons/Cached';
import '@material-ui/icons/Description';
import '@material-ui/icons/Edit';
import 'pluralize';
import 'react-use/lib/useAsync';
import '@material-ui/core/styles';
import '@material-ui/icons/OpenInNew';
import '@material-ui/icons/Star';
import '@material-ui/icons/StarBorder';
import '@material-ui/lab';
import 'react-router-dom';
import '@material-ui/icons/BugReport';
import '@material-ui/icons/MoreVert';
import '@material-ui/icons/FileCopyTwoTone';
import '@backstage/plugin-catalog-react/alpha';
import '@backstage/plugin-catalog-common/alpha';
import '@material-ui/icons/Cancel';
import '@backstage/errors';
import '@backstage/catalog-client';
import '@backstage/plugin-search-react';

const ENTITY_YAML = `metadata:
  name: example
  links:
    - url: https://dashboard.example.com
      title: My Dashboard
      icon: dashboard`;
const useStyles = makeStyles(
  (theme) => ({
    code: {
      borderRadius: 6,
      margin: `${theme.spacing(2)}px 0px`,
      background: theme.palette.type === "dark" ? "#444" : theme.palette.common.white
    }
  }),
  { name: "PluginCatalogEntityLinksEmptyState" }
);
function EntityLinksEmptyState() {
  const classes = useStyles();
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Typography, { variant: "body1" }, "No links defined for this entity. You can add links to your entity YAML as shown in the highlighted example below:"), /* @__PURE__ */ React.createElement("div", { className: classes.code }, /* @__PURE__ */ React.createElement(
    CodeSnippet,
    {
      text: ENTITY_YAML,
      language: "yaml",
      showLineNumbers: true,
      highlightedNumbers: [3, 4, 5, 6],
      customStyle: { background: "inherit", fontSize: "115%" }
    }
  )), /* @__PURE__ */ React.createElement(
    Button,
    {
      variant: "contained",
      color: "primary",
      target: "_blank",
      href: "https://backstage.io/docs/features/software-catalog/descriptor-format#links-optional"
    },
    "Read more"
  ));
}

const EntityLinksCard = (props) => {
  var _a;
  const { cols = void 0, variant } = props;
  const { entity } = useEntity();
  const app = useApp();
  const iconResolver = (key) => {
    var _a2;
    return key ? (_a2 = app.getSystemIcon(key)) != null ? _a2 : LanguageIcon : LanguageIcon;
  };
  const links = (_a = entity == null ? void 0 : entity.metadata) == null ? void 0 : _a.links;
  return /* @__PURE__ */ React.createElement(InfoCard, { title: "Links", variant }, !links || links.length === 0 ? /* @__PURE__ */ React.createElement(EntityLinksEmptyState, null) : /* @__PURE__ */ React.createElement(
    LinksGridList,
    {
      cols,
      items: links.map(({ url, title, icon }) => ({
        text: title != null ? title : url,
        href: url,
        Icon: iconResolver(icon)
      }))
    }
  ));
};

export { EntityLinksCard };
//# sourceMappingURL=index-1c47c3d8.esm.js.map
