{"version":3,"file":"core.esm.js","sources":["../src/components/fields/ArrayField.tsx","../src/components/fields/BooleanField.tsx","../src/components/fields/MultiSchemaField.tsx","../src/components/fields/NumberField.tsx","../src/components/fields/ObjectField.tsx","../src/components/fields/SchemaField.tsx","../src/components/fields/StringField.tsx","../src/components/fields/NullField.tsx","../src/components/fields/index.ts","../src/components/templates/ArrayFieldDescriptionTemplate.tsx","../src/components/templates/ArrayFieldItemTemplate.tsx","../src/components/templates/ArrayFieldTemplate.tsx","../src/components/templates/ArrayFieldTitleTemplate.tsx","../src/components/templates/BaseInputTemplate.tsx","../src/components/templates/ButtonTemplates/SubmitButton.tsx","../src/components/templates/ButtonTemplates/IconButton.tsx","../src/components/templates/ButtonTemplates/AddButton.tsx","../src/components/templates/ButtonTemplates/index.ts","../src/components/templates/DescriptionField.tsx","../src/components/templates/ErrorList.tsx","../src/components/templates/FieldTemplate/Label.tsx","../src/components/templates/FieldTemplate/FieldTemplate.tsx","../src/components/templates/FieldErrorTemplate.tsx","../src/components/templates/FieldHelpTemplate.tsx","../src/components/templates/ObjectFieldTemplate.tsx","../src/components/templates/TitleField.tsx","../src/components/templates/UnsupportedField.tsx","../src/components/templates/WrapIfAdditionalTemplate.tsx","../src/components/templates/index.ts","../src/components/widgets/AltDateWidget.tsx","../src/components/widgets/AltDateTimeWidget.tsx","../src/components/widgets/CheckboxWidget.tsx","../src/components/widgets/CheckboxesWidget.tsx","../src/components/widgets/ColorWidget.tsx","../src/components/widgets/DateWidget.tsx","../src/components/widgets/DateTimeWidget.tsx","../src/components/widgets/EmailWidget.tsx","../src/components/widgets/FileWidget.tsx","../src/components/widgets/HiddenWidget.tsx","../src/components/widgets/PasswordWidget.tsx","../src/components/widgets/RadioWidget.tsx","../src/components/widgets/RangeWidget.tsx","../src/components/widgets/SelectWidget.tsx","../src/components/widgets/TextareaWidget.tsx","../src/components/widgets/TextWidget.tsx","../src/components/widgets/TimeWidget.tsx","../src/components/widgets/URLWidget.tsx","../src/components/widgets/UpDownWidget.tsx","../src/components/widgets/index.ts","../src/getDefaultRegistry.ts","../src/components/Form.tsx","../src/withTheme.tsx"],"sourcesContent":["import { Component, MouseEvent } from 'react';\nimport {\n  getTemplate,\n  getWidget,\n  getUiOptions,\n  isFixedItems,\n  allowAdditionalItems,\n  isCustomWidget,\n  optionsList,\n  ArrayFieldTemplateProps,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  UiSchema,\n  ITEMS_KEY,\n} from '@rjsf/utils';\nimport cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport isObject from 'lodash/isObject';\nimport set from 'lodash/set';\nimport { nanoid } from 'nanoid';\n\n/** Type used to represent the keyed form data used in the state */\ntype KeyedFormDataType<T> = { key: string; item: T };\n\n/** Type used for the state of the `ArrayField` component */\ntype ArrayFieldState<T> = {\n  /** The keyed form data elements */\n  keyedFormData: KeyedFormDataType<T>[];\n  /** Flag indicating whether any of the keyed form data has been updated */\n  updatedKeyedFormData: boolean;\n};\n\n/** Used to generate a unique ID for an element in a row */\nfunction generateRowId() {\n  return nanoid();\n}\n\n/** Converts the `formData` into `KeyedFormDataType` data, using the `generateRowId()` function to create the key\n *\n * @param formData - The data for the form\n * @returns - The `formData` converted into a `KeyedFormDataType` element\n */\nfunction generateKeyedFormData<T>(formData: T[]): KeyedFormDataType<T>[] {\n  return !Array.isArray(formData)\n    ? []\n    : formData.map((item) => {\n        return {\n          key: generateRowId(),\n          item,\n        };\n      });\n}\n\n/** Converts `KeyedFormDataType` data into the inner `formData`\n *\n * @param keyedFormData - The `KeyedFormDataType` to be converted\n * @returns - The inner `formData` item(s) in the `keyedFormData`\n */\nfunction keyedToPlainFormData<T>(keyedFormData: KeyedFormDataType<T> | KeyedFormDataType<T>[]): T[] {\n  if (Array.isArray(keyedFormData)) {\n    return keyedFormData.map((keyedItem) => keyedItem.item);\n  }\n  return [];\n}\n\n/** The `ArrayField` component is used to render a field in the schema that is of type `array`. It supports both normal\n * and fixed array, allowing user to add and remove elements from the array data.\n */\nclass ArrayField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T[], S, F>,\n  ArrayFieldState<T>\n> {\n  /** Constructs an `ArrayField` from the `props`, generating the initial keyed data from the `formData`\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T[], S, F>) {\n    super(props);\n    const { formData = [] } = props;\n    const keyedFormData = generateKeyedFormData<T>(formData);\n    this.state = {\n      keyedFormData,\n      updatedKeyedFormData: false,\n    };\n  }\n\n  /** React lifecycle method that is called when the props are about to change allowing the state to be updated. It\n   * regenerates the keyed form data and returns it\n   *\n   * @param nextProps - The next set of props data\n   * @param prevState - The previous set of state data\n   */\n  static getDerivedStateFromProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n    nextProps: Readonly<FieldProps<T[], S, F>>,\n    prevState: Readonly<ArrayFieldState<T>>\n  ) {\n    // Don't call getDerivedStateFromProps if keyed formdata was just updated.\n    if (prevState.updatedKeyedFormData) {\n      return {\n        updatedKeyedFormData: false,\n      };\n    }\n    const nextFormData = Array.isArray(nextProps.formData) ? nextProps.formData : [];\n    const previousKeyedFormData = prevState.keyedFormData || [];\n    const newKeyedFormData =\n      nextFormData.length === previousKeyedFormData.length\n        ? previousKeyedFormData.map((previousKeyedFormDatum, index) => {\n            return {\n              key: previousKeyedFormDatum.key,\n              item: nextFormData[index],\n            };\n          })\n        : generateKeyedFormData<T>(nextFormData);\n    return {\n      keyedFormData: newKeyedFormData,\n    };\n  }\n\n  /** Returns the appropriate title for an item by getting first the title from the schema.items, then falling back to\n   * the description from the schema.items, and finally the string \"Item\"\n   */\n  get itemTitle() {\n    const { schema, registry } = this.props;\n    const { translateString } = registry;\n    return get(\n      schema,\n      [ITEMS_KEY, 'title'],\n      get(schema, [ITEMS_KEY, 'description'], translateString(TranslatableString.ArrayItemTitle))\n    );\n  }\n\n  /** Determines whether the item described in the schema is always required, which is determined by whether any item\n   * may be null.\n   *\n   * @param itemSchema - The schema for the item\n   * @return - True if the item schema type does not contain the \"null\" type\n   */\n  isItemRequired(itemSchema: S) {\n    if (Array.isArray(itemSchema.type)) {\n      // While we don't yet support composite/nullable jsonschema types, it's\n      // future-proof to check for requirement against these.\n      return !itemSchema.type.includes('null');\n    }\n    // All non-null array item types are inherently required by design\n    return itemSchema.type !== 'null';\n  }\n\n  /** Determines whether more items can be added to the array. If the uiSchema indicates the array doesn't allow adding\n   * then false is returned. Otherwise, if the schema indicates that there are a maximum number of items and the\n   * `formData` matches that value, then false is returned, otherwise true is returned.\n   *\n   * @param formItems - The list of items in the form\n   * @returns - True if the item is addable otherwise false\n   */\n  canAddItem(formItems: any[]) {\n    const { schema, uiSchema, registry } = this.props;\n    let { addable } = getUiOptions<T[], S, F>(uiSchema, registry.globalUiOptions);\n    if (addable !== false) {\n      // if ui:options.addable was not explicitly set to false, we can add\n      // another item if we have not exceeded maxItems yet\n      if (schema.maxItems !== undefined) {\n        addable = formItems.length < schema.maxItems;\n      } else {\n        addable = true;\n      }\n    }\n    return addable;\n  }\n\n  /** Returns the default form information for an item based on the schema for that item. Deals with the possibility\n   * that the schema is fixed and allows additional items.\n   */\n  _getNewFormDataRow = (): T => {\n    const { schema, registry } = this.props;\n    const { schemaUtils } = registry;\n    let itemSchema = schema.items as S;\n    if (isFixedItems(schema) && allowAdditionalItems(schema)) {\n      itemSchema = schema.additionalItems as S;\n    }\n    // Cast this as a T to work around schema utils being for T[] caused by the FieldProps<T[], S, F> call on the class\n    return schemaUtils.getDefaultFormState(itemSchema) as unknown as T;\n  };\n\n  /** Callback handler for when the user clicks on the add or add at index buttons. Creates a new row of keyed form data\n   * either at the end of the list (when index is not specified) or inserted at the `index` when it is, adding it into\n   * the state, and then returning `onChange()` with the plain form data converted from the keyed data\n   *\n   * @param event - The event for the click\n   * @param [index] - The optional index at which to add the new data\n   */\n  _handleAddClick(event: MouseEvent, index?: number) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const { onChange } = this.props;\n    const { keyedFormData } = this.state;\n    const newKeyedFormDataRow: KeyedFormDataType<T> = {\n      key: generateRowId(),\n      item: this._getNewFormDataRow(),\n    };\n    const newKeyedFormData = [...keyedFormData];\n    if (index !== undefined) {\n      newKeyedFormData.splice(index, 0, newKeyedFormDataRow);\n    } else {\n      newKeyedFormData.push(newKeyedFormDataRow);\n    }\n    this.setState(\n      {\n        keyedFormData: newKeyedFormData,\n        updatedKeyedFormData: true,\n      },\n      () => onChange(keyedToPlainFormData(newKeyedFormData))\n    );\n  }\n\n  /** Callback handler for when the user clicks on the add button. Creates a new row of keyed form data at the end of\n   * the list, adding it into the state, and then returning `onChange()` with the plain form data converted from the\n   * keyed data\n   *\n   * @param event - The event for the click\n   */\n  onAddClick = (event: MouseEvent) => {\n    this._handleAddClick(event);\n  };\n\n  /** Callback handler for when the user clicks on the add button on an existing array element. Creates a new row of\n   * keyed form data inserted at the `index`, adding it into the state, and then returning `onChange()` with the plain\n   * form data converted from the keyed data\n   *\n   * @param index - The index at which the add button is clicked\n   */\n  onAddIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      this._handleAddClick(event, index);\n    };\n  };\n\n  /** Callback handler for when the user clicks on the copy button on an existing array element. Clones the row of\n   * keyed form data at the `index` into the next position in the state, and then returning `onChange()` with the plain\n   * form data converted from the keyed data\n   *\n   * @param index - The index at which the copy button is clicked\n   */\n  onCopyIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      const { onChange } = this.props;\n      const { keyedFormData } = this.state;\n      const newKeyedFormDataRow: KeyedFormDataType<T> = {\n        key: generateRowId(),\n        item: cloneDeep(keyedFormData[index].item),\n      };\n      const newKeyedFormData = [...keyedFormData];\n      if (index !== undefined) {\n        newKeyedFormData.splice(index + 1, 0, newKeyedFormDataRow);\n      } else {\n        newKeyedFormData.push(newKeyedFormDataRow);\n      }\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n          updatedKeyedFormData: true,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData))\n      );\n    };\n  };\n\n  /** Callback handler for when the user clicks on the remove button on an existing array element. Removes the row of\n   * keyed form data at the `index` in the state, and then returning `onChange()` with the plain form data converted\n   * from the keyed data\n   *\n   * @param index - The index at which the remove button is clicked\n   */\n  onDropIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n      const { onChange, errorSchema } = this.props;\n      const { keyedFormData } = this.state;\n      // refs #195: revalidate to ensure properly reindexing errors\n      let newErrorSchema: ErrorSchema<T>;\n      if (errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i < index) {\n            set(newErrorSchema, [i], errorSchema[idx]);\n          } else if (i > index) {\n            set(newErrorSchema, [i - 1], errorSchema[idx]);\n          }\n        }\n      }\n      const newKeyedFormData = keyedFormData.filter((_, i) => i !== index);\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n          updatedKeyedFormData: true,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData), newErrorSchema as ErrorSchema<T[]>)\n      );\n    };\n  };\n\n  /** Callback handler for when the user clicks on one of the move item buttons on an existing array element. Moves the\n   * row of keyed form data at the `index` to the `newIndex` in the state, and then returning `onChange()` with the\n   * plain form data converted from the keyed data\n   *\n   * @param index - The index of the item to move\n   * @param newIndex - The index to where the item is to be moved\n   */\n  onReorderClick = (index: number, newIndex: number) => {\n    return (event: MouseEvent<HTMLButtonElement>) => {\n      if (event) {\n        event.preventDefault();\n        event.currentTarget.blur();\n      }\n      const { onChange, errorSchema } = this.props;\n      let newErrorSchema: ErrorSchema<T>;\n      if (errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i == index) {\n            set(newErrorSchema, [newIndex], errorSchema[index]);\n          } else if (i == newIndex) {\n            set(newErrorSchema, [index], errorSchema[newIndex]);\n          } else {\n            set(newErrorSchema, [idx], errorSchema[i]);\n          }\n        }\n      }\n\n      const { keyedFormData } = this.state;\n      function reOrderArray() {\n        // Copy item\n        const _newKeyedFormData = keyedFormData.slice();\n\n        // Moves item from index to newIndex\n        _newKeyedFormData.splice(index, 1);\n        _newKeyedFormData.splice(newIndex, 0, keyedFormData[index]);\n\n        return _newKeyedFormData;\n      }\n      const newKeyedFormData = reOrderArray();\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData), newErrorSchema as ErrorSchema<T[]>)\n      );\n    };\n  };\n\n  /** Callback handler used to deal with changing the value of the data in the array at the `index`. Calls the\n   * `onChange` callback with the updated form data\n   *\n   * @param index - The index of the item being changed\n   */\n  onChangeForIndex = (index: number) => {\n    return (value: any, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      const arrayData = Array.isArray(formData) ? formData : [];\n      const newFormData = arrayData.map((item: T, i: number) => {\n        // We need to treat undefined items as nulls to have validation.\n        // See https://github.com/tdegrunt/jsonschema/issues/206\n        const jsonValue = typeof value === 'undefined' ? null : value;\n        return index === i ? jsonValue : item;\n      });\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [index]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Callback handler used to change the value for a checkbox */\n  onSelectChange = (value: any) => {\n    const { onChange, idSchema } = this.props;\n    onChange(value, undefined, idSchema && idSchema.$id);\n  };\n\n  /** Renders the `ArrayField` depending on the specific needs of the schema and uischema elements\n   */\n  render() {\n    const { schema, uiSchema, idSchema, registry } = this.props;\n    const { schemaUtils, translateString } = registry;\n    if (!(ITEMS_KEY in schema)) {\n      const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n      const UnsupportedFieldTemplate = getTemplate<'UnsupportedFieldTemplate', T[], S, F>(\n        'UnsupportedFieldTemplate',\n        registry,\n        uiOptions\n      );\n\n      return (\n        <UnsupportedFieldTemplate\n          schema={schema}\n          idSchema={idSchema}\n          reason={translateString(TranslatableString.MissingItems)}\n          registry={registry}\n        />\n      );\n    }\n    if (schemaUtils.isMultiSelect(schema)) {\n      // If array has enum or uniqueItems set to true, call renderMultiSelect() to render the default multiselect widget or a custom widget, if specified.\n      return this.renderMultiSelect();\n    }\n    if (isCustomWidget<T[], S, F>(uiSchema)) {\n      return this.renderCustomWidget();\n    }\n    if (isFixedItems(schema)) {\n      return this.renderFixedArray();\n    }\n    if (schemaUtils.isFilesArray(schema, uiSchema)) {\n      return this.renderFiles();\n    }\n    return this.renderNormalArray();\n  }\n\n  /** Renders a normal array without any limitations of length\n   */\n  renderNormalArray() {\n    const {\n      schema,\n      uiSchema = {},\n      errorSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      idPrefix,\n      idSeparator = '_',\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    const title = schema.title === undefined ? name : schema.title;\n    const { schemaUtils, formContext } = registry;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const _schemaItems: S = isObject(schema.items) ? (schema.items as S) : ({} as S);\n    const itemsSchema: S = schemaUtils.retrieveSchema(_schemaItems);\n    const formData = keyedToPlainFormData(this.state.keyedFormData);\n    const canAdd = this.canAddItem(formData);\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const itemSchema = schemaUtils.retrieveSchema(_schemaItems, itemCast);\n        const itemErrorSchema = errorSchema ? (errorSchema[index] as ErrorSchema<T[]>) : undefined;\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(itemSchema, itemIdPrefix, itemCast, idPrefix, idSeparator);\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canAdd,\n          canMoveUp: index > 0,\n          canMoveDown: index < formData.length - 1,\n          itemSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          itemData: itemCast,\n          itemUiSchema: uiSchema.items,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n          totalItems: keyedFormData.length,\n        });\n      }),\n      className: `field field-array field-array-of-${itemsSchema.type}`,\n      disabled,\n      idSchema,\n      uiSchema,\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      schema,\n      title,\n      formContext,\n      formData,\n      rawErrors,\n      registry,\n    };\n\n    const Template = getTemplate<'ArrayFieldTemplate', T[], S, F>('ArrayFieldTemplate', registry, uiOptions);\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders an array using the custom widget provided by the user in the `uiSchema`\n   */\n  renderCustomWidget() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      hideError,\n      placeholder,\n      onBlur,\n      onFocus,\n      formData: items = [],\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, formContext, globalUiOptions, schemaUtils } = registry;\n    const { widget, title: uiTitle, ...options } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    const label = uiTitle ?? schema.title ?? name;\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n    return (\n      <Widget\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        hideError={hideError}\n        required={required}\n        label={label}\n        hideLabel={!displayLabel}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array as a set of checkboxes\n   */\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData: items = [],\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      placeholder,\n      onBlur,\n      onFocus,\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, schemaUtils, formContext, globalUiOptions } = registry;\n    const itemsSchema = schemaUtils.retrieveSchema(schema.items as S, items);\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = 'select', title: uiTitle, ...options } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    const label = uiTitle ?? schema.title ?? name;\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n    return (\n      <Widget\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={{ ...options, enumOptions }}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        label={label}\n        hideLabel={!displayLabel}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array of files using the `FileWidget`\n   */\n  renderFiles() {\n    const {\n      schema,\n      uiSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      onBlur,\n      onFocus,\n      registry,\n      formData: items = [],\n      rawErrors,\n    } = this.props;\n    const { widgets, formContext, globalUiOptions, schemaUtils } = registry;\n    const { widget = 'files', title: uiTitle, ...options } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    const label = uiTitle ?? schema.title ?? name;\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n    return (\n      <Widget\n        options={options}\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        schema={schema}\n        uiSchema={uiSchema}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        registry={registry}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n        label={label}\n        hideLabel={!displayLabel}\n      />\n    );\n  }\n\n  /** Renders an array that has a maximum limit of items\n   */\n  renderFixedArray() {\n    const {\n      schema,\n      uiSchema = {},\n      formData = [],\n      errorSchema,\n      idPrefix,\n      idSeparator = '_',\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    let { formData: items = [] } = this.props;\n    const title = schema.title || name;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const { schemaUtils, formContext } = registry;\n    const _schemaItems: S[] = isObject(schema.items) ? (schema.items as S[]) : ([] as S[]);\n    const itemSchemas = _schemaItems.map((item: S, index: number) =>\n      schemaUtils.retrieveSchema(item, formData[index] as unknown as T[])\n    );\n    const additionalSchema = isObject(schema.additionalItems)\n      ? schemaUtils.retrieveSchema(schema.additionalItems as S, formData)\n      : null;\n\n    if (!items || items.length < itemSchemas.length) {\n      // to make sure at least all fixed items are generated\n      items = items || [];\n      items = items.concat(new Array(itemSchemas.length - items.length));\n    }\n\n    // These are the props passed into the render function\n    const canAdd = this.canAddItem(items) && !!additionalSchema;\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd,\n      className: 'field field-array field-array-fixed-items',\n      disabled,\n      idSchema,\n      formData,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const additional = index >= itemSchemas.length;\n        const itemSchema =\n          additional && isObject(schema.additionalItems)\n            ? schemaUtils.retrieveSchema(schema.additionalItems as S, itemCast)\n            : itemSchemas[index];\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(itemSchema, itemIdPrefix, itemCast, idPrefix, idSeparator);\n        const itemUiSchema = additional\n          ? uiSchema.additionalItems || {}\n          : Array.isArray(uiSchema.items)\n          ? uiSchema.items[index]\n          : uiSchema.items || {};\n        const itemErrorSchema = errorSchema ? (errorSchema[index] as ErrorSchema<T[]>) : undefined;\n\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canAdd,\n          canRemove: additional,\n          canMoveUp: index >= itemSchemas.length + 1,\n          canMoveDown: additional && index < items.length - 1,\n          itemSchema,\n          itemData: itemCast,\n          itemUiSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n          totalItems: keyedFormData.length,\n        });\n      }),\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      registry,\n      schema,\n      uiSchema,\n      title,\n      formContext,\n      rawErrors,\n    };\n\n    const Template = getTemplate<'ArrayFieldTemplate', T[], S, F>('ArrayFieldTemplate', registry, uiOptions);\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders the individual array item using a `SchemaField` along with the additional properties required to be send\n   * back to the `ArrayFieldItemTemplate`.\n   *\n   * @param props - The props for the individual array item to be rendered\n   */\n  renderArrayFieldItem(props: {\n    key: string;\n    index: number;\n    name: string;\n    canAdd: boolean;\n    canRemove?: boolean;\n    canMoveUp: boolean;\n    canMoveDown: boolean;\n    itemSchema: S;\n    itemData: T[];\n    itemUiSchema: UiSchema<T[], S, F>;\n    itemIdSchema: IdSchema<T[]>;\n    itemErrorSchema?: ErrorSchema<T[]>;\n    autofocus?: boolean;\n    onBlur: FieldProps<T[], S, F>['onBlur'];\n    onFocus: FieldProps<T[], S, F>['onFocus'];\n    rawErrors?: string[];\n    totalItems: number;\n  }) {\n    const {\n      key,\n      index,\n      name,\n      canAdd,\n      canRemove = true,\n      canMoveUp,\n      canMoveDown,\n      itemSchema,\n      itemData,\n      itemUiSchema,\n      itemIdSchema,\n      itemErrorSchema,\n      autofocus,\n      onBlur,\n      onFocus,\n      rawErrors,\n      totalItems,\n    } = props;\n    const { disabled, hideError, idPrefix, idSeparator, readonly, uiSchema, registry, formContext } = this.props;\n    const {\n      fields: { ArraySchemaField, SchemaField },\n      globalUiOptions,\n    } = registry;\n    const ItemSchemaField = ArraySchemaField || SchemaField;\n    const { orderable = true, removable = true, copyable = false } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const has: { [key: string]: boolean } = {\n      moveUp: orderable && canMoveUp,\n      moveDown: orderable && canMoveDown,\n      copy: copyable && canAdd,\n      remove: removable && canRemove,\n      toolbar: false,\n    };\n    has.toolbar = Object.keys(has).some((key: keyof typeof has) => has[key]);\n\n    return {\n      children: (\n        <ItemSchemaField\n          name={name}\n          index={index}\n          schema={itemSchema}\n          uiSchema={itemUiSchema}\n          formData={itemData}\n          formContext={formContext}\n          errorSchema={itemErrorSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          idSchema={itemIdSchema}\n          required={this.isItemRequired(itemSchema)}\n          onChange={this.onChangeForIndex(index)}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n          hideError={hideError}\n          autofocus={autofocus}\n          rawErrors={rawErrors}\n        />\n      ),\n      className: 'array-item',\n      disabled,\n      canAdd,\n      hasCopy: has.copy,\n      hasToolbar: has.toolbar,\n      hasMoveUp: has.moveUp,\n      hasMoveDown: has.moveDown,\n      hasRemove: has.remove,\n      index,\n      totalItems,\n      key,\n      onAddIndexClick: this.onAddIndexClick,\n      onCopyIndexClick: this.onCopyIndexClick,\n      onDropIndexClick: this.onDropIndexClick,\n      onReorderClick: this.onReorderClick,\n      readonly,\n      registry,\n      schema: itemSchema,\n      uiSchema: itemUiSchema,\n    };\n  }\n}\n\n/** `ArrayField` is `React.ComponentType<FieldProps<T[], S, F>>` (necessarily) but the `registry` requires things to be a\n * `Field` which is defined as `React.ComponentType<FieldProps<T, S, F>>`, so cast it to make `registry` happy.\n */\nexport default ArrayField;\n","import {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  FieldProps,\n  FormContextType,\n  EnumOptionsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\nimport isObject from 'lodash/isObject';\n\n/** The `BooleanField` component is used to render a field in the schema is boolean. It constructs `enumOptions` for the\n * two boolean values based on the various alternatives in the schema.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction BooleanField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext, translateString, globalUiOptions } = registry;\n  const {\n    widget = 'checkbox',\n    title: uiTitle,\n    // Unlike the other fields, don't use `getDisplayLabel()` since it always returns false for the boolean type\n    label: displayLabel = true,\n    ...options\n  } = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n  const Widget = getWidget(schema, widget, widgets);\n  const yes = translateString(TranslatableString.YesLabel);\n  const no = translateString(TranslatableString.NoLabel);\n  let enumOptions: EnumOptionsType<S>[] | undefined;\n  const label = uiTitle ?? title ?? name;\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList<S>({\n      oneOf: schema.oneOf\n        .map((option) => {\n          if (isObject(option)) {\n            return {\n              ...option,\n              title: option.title || (option.const === true ? yes : no),\n            };\n          }\n          return undefined;\n        })\n        .filter((o: any) => o) as S[], // cast away the error that typescript can't grok is fixed\n    } as unknown as S);\n  } else {\n    // We deprecated enumNames in v5. It's intentionally omitted from RSJFSchema type, so we need to cast here.\n    const schemaWithEnumNames = schema as S & { enumNames?: string[] };\n    const enums = schema.enum ?? [true, false];\n    if (!schemaWithEnumNames.enumNames && enums.length === 2 && enums.every((v: any) => typeof v === 'boolean')) {\n      enumOptions = [\n        {\n          value: enums[0],\n          label: enums[0] ? yes : no,\n        },\n        {\n          value: enums[1],\n          label: enums[1] ? yes : no,\n        },\n      ];\n    } else {\n      enumOptions = optionsList<S>({\n        enum: enums,\n        // NOTE: enumNames is deprecated, but still supported for now.\n        enumNames: schemaWithEnumNames.enumNames,\n      } as unknown as S);\n    }\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema.$id}\n      name={name}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={label}\n      hideLabel={!displayLabel}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default BooleanField;\n","import { Component } from 'react';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport isString from 'lodash/isString';\nimport omit from 'lodash/omit';\nimport {\n  deepEquals,\n  ERRORS_KEY,\n  FieldProps,\n  FormContextType,\n  getUiOptions,\n  getWidget,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\n\n/** Type used for the state of the `AnyOfField` component */\ntype AnyOfFieldState<S extends StrictRJSFSchema = RJSFSchema> = {\n  /** The currently selected option */\n  selectedOption: number;\n  /* The option schemas after retrieving all $refs */\n  retrievedOptions: S[];\n};\n\n/** The `AnyOfField` component is used to render a field in the schema that is an `anyOf`, `allOf` or `oneOf`. It tracks\n * the currently selected option and cleans up any irrelevant data in `formData`.\n *\n * @param props - The `FieldProps` for this template\n */\nclass AnyOfField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>,\n  AnyOfFieldState<S>\n> {\n  /** Constructs an `AnyOfField` with the given `props` to initialize the initially selected option in state\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T, S, F>) {\n    super(props);\n\n    const {\n      formData,\n      options,\n      registry: { schemaUtils },\n    } = this.props;\n    // cache the retrieved options in state in case they have $refs to save doing it later\n    const retrievedOptions = options.map((opt: S) => schemaUtils.retrieveSchema(opt, formData));\n\n    this.state = {\n      retrievedOptions,\n      selectedOption: this.getMatchingOption(0, formData, retrievedOptions),\n    };\n  }\n\n  /** React lifecycle method that is called when the props and/or state for this component is updated. It recomputes the\n   * currently selected option based on the overall `formData`\n   *\n   * @param prevProps - The previous `FieldProps` for this template\n   * @param prevState - The previous `AnyOfFieldState` for this template\n   */\n  componentDidUpdate(prevProps: Readonly<FieldProps<T, S, F>>, prevState: Readonly<AnyOfFieldState>) {\n    const { formData, options, idSchema } = this.props;\n    const { selectedOption } = this.state;\n    let newState = this.state;\n    if (!deepEquals(prevProps.options, options)) {\n      const {\n        registry: { schemaUtils },\n      } = this.props;\n      // re-cache the retrieved options in state in case they have $refs to save doing it later\n      const retrievedOptions = options.map((opt: S) => schemaUtils.retrieveSchema(opt, formData));\n      newState = { selectedOption, retrievedOptions };\n    }\n    if (!deepEquals(formData, prevProps.formData) && idSchema.$id === prevProps.idSchema.$id) {\n      const { retrievedOptions } = newState;\n      const matchingOption = this.getMatchingOption(selectedOption, formData, retrievedOptions);\n\n      if (prevState && matchingOption !== selectedOption) {\n        newState = { selectedOption: matchingOption, retrievedOptions };\n      }\n    }\n    if (newState !== this.state) {\n      this.setState(newState);\n    }\n  }\n\n  /** Determines the best matching option for the given `formData` and `options`.\n   *\n   * @param formData - The new formData\n   * @param options - The list of options to choose from\n   * @return - The index of the `option` that best matches the `formData`\n   */\n  getMatchingOption(selectedOption: number, formData: T | undefined, options: S[]) {\n    const {\n      schema,\n      registry: { schemaUtils },\n    } = this.props;\n\n    let discriminator: string | undefined;\n    const maybeString = get(schema, 'discriminator.propertyName', undefined);\n    if (isString(maybeString)) {\n      discriminator = maybeString;\n    } else if (maybeString !== undefined) {\n      console.warn(`Expecting discriminator to be a string, got \"${typeof maybeString}\" instead`);\n    }\n    const option = schemaUtils.getClosestMatchingOption(formData, options, selectedOption, discriminator);\n    if (option > 0) {\n      return option;\n    }\n    // If the form data matches none of the options, use the currently selected\n    // option, assuming it's available; otherwise use the first option\n    return selectedOption || 0;\n  }\n\n  /** Callback handler to remember what the currently selected option is. In addition to that the `formData` is updated\n   * to remove properties that are not part of the newly selected option schema, and then the updated data is passed to\n   * the `onChange` handler.\n   *\n   * @param option - The new option value being selected\n   */\n  onOptionChange = (option?: string) => {\n    const { selectedOption, retrievedOptions } = this.state;\n    const { formData, onChange, registry } = this.props;\n    const { schemaUtils } = registry;\n    const intOption = option !== undefined ? parseInt(option, 10) : -1;\n    if (intOption === selectedOption) {\n      return;\n    }\n    const newOption = intOption >= 0 ? retrievedOptions[intOption] : undefined;\n    const oldOption = selectedOption >= 0 ? retrievedOptions[selectedOption] : undefined;\n\n    let newFormData = schemaUtils.sanitizeDataForNewSchema(newOption, oldOption, formData);\n    if (newFormData && newOption) {\n      // Call getDefaultFormState to make sure defaults are populated on change. Pass \"excludeObjectChildren\"\n      // so that only the root objects themselves are created without adding undefined children properties\n      newFormData = schemaUtils.getDefaultFormState(newOption, newFormData, 'excludeObjectChildren') as T;\n    }\n    onChange(newFormData, undefined, this.getFieldId());\n\n    this.setState({ selectedOption: intOption });\n  };\n\n  getFieldId() {\n    const { idSchema, schema } = this.props;\n    return `${idSchema.$id}${schema.oneOf ? '__oneof_select' : '__anyof_select'}`;\n  }\n\n  /** Renders the `AnyOfField` selector along with a `SchemaField` for the value of the `formData`\n   */\n  render() {\n    const {\n      name,\n      baseType,\n      disabled = false,\n      errorSchema = {},\n      formContext,\n      onBlur,\n      onFocus,\n      registry,\n      schema,\n      uiSchema,\n    } = this.props;\n\n    const { widgets, fields, translateString, globalUiOptions, schemaUtils } = registry;\n    const { SchemaField: _SchemaField } = fields;\n    const { selectedOption, retrievedOptions } = this.state;\n    const {\n      widget = 'select',\n      placeholder,\n      autofocus,\n      autocomplete,\n      title = schema.title,\n      ...uiOptions\n    } = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T, S, F>({ type: 'number' }, widget, widgets);\n    const rawErrors = get(errorSchema, ERRORS_KEY, []);\n    const fieldErrorSchema = omit(errorSchema, [ERRORS_KEY]);\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n\n    const option = selectedOption >= 0 ? retrievedOptions[selectedOption] || null : null;\n    let optionSchema: S;\n\n    if (option) {\n      // If the subschema doesn't declare a type, infer the type from the\n      // parent schema\n      optionSchema = option.type ? option : Object.assign({}, option, { type: baseType });\n    }\n\n    const translateEnum: TranslatableString = title\n      ? TranslatableString.TitleOptionPrefix\n      : TranslatableString.OptionPrefix;\n    const translateParams = title ? [title] : [];\n    const enumOptions = retrievedOptions.map((opt: { title?: string }, index: number) => ({\n      label: opt.title || translateString(translateEnum, translateParams.concat(String(index + 1))),\n      value: index,\n    }));\n\n    return (\n      <div className='panel panel-default panel-body'>\n        <div className='form-group'>\n          <Widget\n            id={this.getFieldId()}\n            name={`${name}${schema.oneOf ? '__oneof_select' : '__anyof_select'}`}\n            schema={{ type: 'number', default: 0 } as S}\n            onChange={this.onOptionChange}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            disabled={disabled || isEmpty(enumOptions)}\n            multiple={false}\n            rawErrors={rawErrors}\n            errorSchema={fieldErrorSchema}\n            value={selectedOption >= 0 ? selectedOption : undefined}\n            options={{ enumOptions, ...uiOptions }}\n            registry={registry}\n            formContext={formContext}\n            placeholder={placeholder}\n            autocomplete={autocomplete}\n            autofocus={autofocus}\n            label={title ?? name}\n            hideLabel={!displayLabel}\n          />\n        </div>\n        {option !== null && <_SchemaField {...this.props} schema={optionSchema!} />}\n      </div>\n    );\n  }\n}\n\nexport default AnyOfField;\n","import { useState, useCallback } from 'react';\nimport { asNumber, FieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n// Matches a string that ends in a . character, optionally followed by a sequence of\n// digits followed by any number of 0 characters up until the end of the line.\n// Ensuring that there is at least one prefixed character is important so that\n// you don't incorrectly match against \"0\".\nconst trailingCharMatcherWithPrefix = /\\.([0-9]*0)*$/;\n\n// This is used for trimming the trailing 0 and . characters without affecting\n// the rest of the string. Its possible to use one RegEx with groups for this\n// functionality, but it is fairly complex compared to simply defining two\n// different matchers.\nconst trailingCharMatcher = /[0.]0*$/;\n\n/**\n * The NumberField class has some special handling for dealing with trailing\n * decimal points and/or zeroes. This logic is designed to allow trailing values\n * to be visible in the input element, but not be represented in the\n * corresponding form data.\n *\n * The algorithm is as follows:\n *\n * 1. When the input value changes the value is cached in the component state\n *\n * 2. The value is then normalized, removing trailing decimal points and zeros,\n *    then passed to the \"onChange\" callback\n *\n * 3. When the component is rendered, the formData value is checked against the\n *    value cached in the state. If it matches the cached value, the cached\n *    value is passed to the input instead of the formData value\n */\nfunction NumberField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const { registry, onChange, formData, value: initialValue } = props;\n  const [lastValue, setLastValue] = useState(initialValue);\n  const { StringField } = registry.fields;\n\n  let value = formData;\n\n  /** Handle the change from the `StringField` to properly convert to a number\n   *\n   * @param value - The current value for the change occurring\n   */\n  const handleChange = useCallback(\n    (value: FieldProps<T, S, F>['value']) => {\n      // Cache the original value in component state\n      setLastValue(value);\n\n      // Normalize decimals that don't start with a zero character in advance so\n      // that the rest of the normalization logic is simpler\n      if (`${value}`.charAt(0) === '.') {\n        value = `0${value}`;\n      }\n\n      // Check that the value is a string (this can happen if the widget used is a\n      // <select>, due to an enum declaration etc) then, if the value ends in a\n      // trailing decimal point or multiple zeroes, strip the trailing values\n      const processed =\n        typeof value === 'string' && value.match(trailingCharMatcherWithPrefix)\n          ? asNumber(value.replace(trailingCharMatcher, ''))\n          : asNumber(value);\n\n      onChange(processed as unknown as T);\n    },\n    [onChange]\n  );\n\n  if (typeof lastValue === 'string' && typeof value === 'number') {\n    // Construct a regular expression that checks for a string that consists\n    // of the formData value suffixed with zero or one '.' characters and zero\n    // or more '0' characters\n    const re = new RegExp(`${value}`.replace('.', '\\\\.') + '\\\\.?0*$');\n\n    // If the cached \"lastValue\" is a match, use that instead of the formData\n    // value to prevent the input value from changing in the UI\n    if (lastValue.match(re)) {\n      value = lastValue as unknown as T;\n    }\n  }\n\n  return <StringField {...props} formData={value} onChange={handleChange} />;\n}\n\nexport default NumberField;\n","import { Component } from 'react';\nimport {\n  getTemplate,\n  getUiOptions,\n  orderProperties,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  GenericObjectType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  ADDITIONAL_PROPERTY_FLAG,\n  PROPERTIES_KEY,\n  REF_KEY,\n  ANY_OF_KEY,\n  ONE_OF_KEY,\n} from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport isObject from 'lodash/isObject';\nimport set from 'lodash/set';\nimport unset from 'lodash/unset';\n\n/** Type used for the state of the `ObjectField` component */\ntype ObjectFieldState = {\n  /** Flag indicating whether an additional property key was modified */\n  wasPropertyKeyModified: boolean;\n  /** The set of additional properties */\n  additionalProperties: object;\n};\n\n/** The `ObjectField` component is used to render a field in the schema that is of type `object`. It tracks whether an\n * additional property key was modified and what it was modified to\n *\n * @param props - The `FieldProps` for this template\n */\nclass ObjectField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>,\n  ObjectFieldState\n> {\n  /** Set up the initial state */\n  state = {\n    wasPropertyKeyModified: false,\n    additionalProperties: {},\n  };\n\n  /** Returns a flag indicating whether the `name` field is required in the object schema\n   *\n   * @param name - The name of the field to check for required-ness\n   * @returns - True if the field `name` is required, false otherwise\n   */\n  isRequired(name: string) {\n    const { schema } = this.props;\n    return Array.isArray(schema.required) && schema.required.indexOf(name) !== -1;\n  }\n\n  /** Returns the `onPropertyChange` handler for the `name` field. Handles the special case where a user is attempting\n   * to clear the data for a field added as an additional property. Calls the `onChange()` handler with the updated\n   * formData.\n   *\n   * @param name - The name of the property\n   * @param addedByAdditionalProperties - Flag indicating whether this property is an additional property\n   * @returns - The onPropertyChange callback for the `name` property\n   */\n  onPropertyChange = (name: string, addedByAdditionalProperties = false) => {\n    return (value: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      if (value === undefined && addedByAdditionalProperties) {\n        // Don't set value = undefined for fields added by\n        // additionalProperties. Doing so removes them from the\n        // formData, which causes them to completely disappear\n        // (including the input field for the property name). Unlike\n        // fields which are \"mandated\" by the schema, these fields can\n        // be set to undefined by clicking a \"delete field\" button, so\n        // set empty values to the empty string.\n        value = '' as unknown as T;\n      }\n      const newFormData = { ...formData, [name]: value } as unknown as T;\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [name]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Returns a callback to handle the onDropPropertyClick event for the given `key` which removes the old `key` data\n   * and calls the `onChange` callback with it\n   *\n   * @param key - The key for which the drop callback is desired\n   * @returns - The drop property click callback\n   */\n  onDropPropertyClick = (key: string) => {\n    return (event: DragEvent) => {\n      event.preventDefault();\n      const { onChange, formData } = this.props;\n      const copiedFormData = { ...formData } as T;\n      unset(copiedFormData, key);\n      onChange(copiedFormData);\n    };\n  };\n\n  /** Computes the next available key name from the `preferredKey`, indexing through the already existing keys until one\n   * that is already not assigned is found.\n   *\n   * @param preferredKey - The preferred name of a new key\n   * @param [formData] - The form data in which to check if the desired key already exists\n   * @returns - The name of the next available key from `preferredKey`\n   */\n  getAvailableKey = (preferredKey: string, formData?: T) => {\n    const { uiSchema, registry } = this.props;\n    const { duplicateKeySuffixSeparator = '-' } = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions);\n\n    let index = 0;\n    let newKey = preferredKey;\n    while (has(formData, newKey)) {\n      newKey = `${preferredKey}${duplicateKeySuffixSeparator}${++index}`;\n    }\n    return newKey;\n  };\n\n  /** Returns a callback function that deals with the rename of a key for an additional property for a schema. That\n   * callback will attempt to rename the key and move the existing data to that key, calling `onChange` when it does.\n   *\n   * @param oldValue - The old value of a field\n   * @returns - The key change callback function\n   */\n  onKeyChange = (oldValue: any) => {\n    return (value: any, newErrorSchema: ErrorSchema<T>) => {\n      if (oldValue === value) {\n        return;\n      }\n      const { formData, onChange, errorSchema } = this.props;\n\n      value = this.getAvailableKey(value, formData);\n      const newFormData: GenericObjectType = {\n        ...(formData as GenericObjectType),\n      };\n      const newKeys: GenericObjectType = { [oldValue]: value };\n      const keyValues = Object.keys(newFormData).map((key) => {\n        const newKey = newKeys[key] || key;\n        return { [newKey]: newFormData[key] };\n      });\n      const renamedObj = Object.assign({}, ...keyValues);\n\n      this.setState({ wasPropertyKeyModified: true });\n\n      onChange(\n        renamedObj,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [value]: newErrorSchema,\n          }\n      );\n    };\n  };\n\n  /** Returns a default value to be used for a new additional schema property of the given `type`\n   *\n   * @param type - The type of the new additional schema property\n   */\n  getDefaultValue(type?: RJSFSchema['type']) {\n    const {\n      registry: { translateString },\n    } = this.props;\n    switch (type) {\n      case 'array':\n        return [];\n      case 'boolean':\n        return false;\n      case 'null':\n        return null;\n      case 'number':\n        return 0;\n      case 'object':\n        return {};\n      case 'string':\n      default:\n        // We don't have a datatype for some reason (perhaps additionalProperties was true)\n        return translateString(TranslatableString.NewStringDefault);\n    }\n  }\n\n  /** Handles the adding of a new additional property on the given `schema`. Calls the `onChange` callback once the new\n   * default data for that field has been added to the formData.\n   *\n   * @param schema - The schema element to which the new property is being added\n   */\n  handleAddClick = (schema: S) => () => {\n    if (!schema.additionalProperties) {\n      return;\n    }\n    const { formData, onChange, registry } = this.props;\n    const newFormData = { ...formData } as T;\n\n    let type: RJSFSchema['type'] = undefined;\n    if (isObject(schema.additionalProperties)) {\n      type = schema.additionalProperties.type;\n      let apSchema = schema.additionalProperties;\n      if (REF_KEY in apSchema) {\n        const { schemaUtils } = registry;\n        apSchema = schemaUtils.retrieveSchema({ $ref: apSchema[REF_KEY] } as S, formData);\n        type = apSchema.type;\n      }\n      if (!type && (ANY_OF_KEY in apSchema || ONE_OF_KEY in apSchema)) {\n        type = 'object';\n      }\n    }\n\n    const newKey = this.getAvailableKey('newKey', newFormData);\n    // Cast this to make the `set` work properly\n    set(newFormData as GenericObjectType, newKey, this.getDefaultValue(type));\n\n    onChange(newFormData);\n  };\n\n  /** Renders the `ObjectField` from the given props\n   */\n  render() {\n    const {\n      schema: rawSchema,\n      uiSchema = {},\n      formData,\n      errorSchema,\n      idSchema,\n      name,\n      required = false,\n      disabled = false,\n      readonly = false,\n      hideError,\n      idPrefix,\n      idSeparator,\n      onBlur,\n      onFocus,\n      registry,\n    } = this.props;\n\n    const { fields, formContext, schemaUtils, translateString, globalUiOptions } = registry;\n    const { SchemaField } = fields;\n    const schema: S = schemaUtils.retrieveSchema(rawSchema, formData);\n    const uiOptions = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n    const { properties: schemaProperties = {} } = schema;\n\n    const title = uiOptions.title ?? schema.title ?? name;\n    const description = uiOptions.description ?? schema.description;\n    let orderedProperties: string[];\n    try {\n      const properties = Object.keys(schemaProperties);\n      orderedProperties = orderProperties(properties, uiOptions.order);\n    } catch (err) {\n      return (\n        <div>\n          <p className='config-error' style={{ color: 'red' }}>\n            <Markdown>\n              {translateString(TranslatableString.InvalidObjectField, [name || 'root', (err as Error).message])}\n            </Markdown>\n          </p>\n          <pre>{JSON.stringify(schema)}</pre>\n        </div>\n      );\n    }\n\n    const Template = getTemplate<'ObjectFieldTemplate', T, S, F>('ObjectFieldTemplate', registry, uiOptions);\n\n    const templateProps = {\n      // getDisplayLabel() always returns false for object types, so just check the `uiOptions.label`\n      title: uiOptions.label === false ? '' : title,\n      description: uiOptions.label === false ? undefined : description,\n      properties: orderedProperties.map((name) => {\n        const addedByAdditionalProperties = has(schema, [PROPERTIES_KEY, name, ADDITIONAL_PROPERTY_FLAG]);\n        const fieldUiSchema = addedByAdditionalProperties ? uiSchema.additionalProperties : uiSchema[name];\n        const hidden = getUiOptions<T, S, F>(fieldUiSchema).widget === 'hidden';\n        const fieldIdSchema: IdSchema<T> = get(idSchema, [name], {});\n\n        return {\n          content: (\n            <SchemaField\n              key={name}\n              name={name}\n              required={this.isRequired(name)}\n              schema={get(schema, [PROPERTIES_KEY, name], {})}\n              uiSchema={fieldUiSchema}\n              errorSchema={get(errorSchema, name)}\n              idSchema={fieldIdSchema}\n              idPrefix={idPrefix}\n              idSeparator={idSeparator}\n              formData={get(formData, name)}\n              formContext={formContext}\n              wasPropertyKeyModified={this.state.wasPropertyKeyModified}\n              onKeyChange={this.onKeyChange(name)}\n              onChange={this.onPropertyChange(name, addedByAdditionalProperties)}\n              onBlur={onBlur}\n              onFocus={onFocus}\n              registry={registry}\n              disabled={disabled}\n              readonly={readonly}\n              hideError={hideError}\n              onDropPropertyClick={this.onDropPropertyClick}\n            />\n          ),\n          name,\n          readonly,\n          disabled,\n          required,\n          hidden,\n        };\n      }),\n      readonly,\n      disabled,\n      required,\n      idSchema,\n      uiSchema,\n      errorSchema,\n      schema,\n      formData,\n      formContext,\n      registry,\n    };\n    return <Template {...templateProps} onAddClick={this.handleAddClick} />;\n  }\n}\n\nexport default ObjectField;\n","import { useCallback, Component } from 'react';\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  deepEquals,\n  descriptionId,\n  ErrorSchema,\n  FieldProps,\n  FieldTemplateProps,\n  FormContextType,\n  getSchemaType,\n  getTemplate,\n  getUiOptions,\n  ID_KEY,\n  IdSchema,\n  mergeObjects,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  UI_OPTIONS_KEY,\n  UIOptionsType,\n} from '@rjsf/utils';\nimport isObject from 'lodash/isObject';\nimport omit from 'lodash/omit';\n\n/** The map of component type to FieldName */\nconst COMPONENT_TYPES: { [key: string]: string } = {\n  array: 'ArrayField',\n  boolean: 'BooleanField',\n  integer: 'NumberField',\n  number: 'NumberField',\n  object: 'ObjectField',\n  string: 'StringField',\n  null: 'NullField',\n};\n\n/** Computes and returns which `Field` implementation to return in order to render the field represented by the\n * `schema`. The `uiOptions` are used to alter what potential `Field` implementation is actually returned. If no\n * appropriate `Field` implementation can be found then a wrapper around `UnsupportedFieldTemplate` is used.\n *\n * @param schema - The schema from which to obtain the type\n * @param uiOptions - The UI Options that may affect the component decision\n * @param idSchema - The id that is passed to the `UnsupportedFieldTemplate`\n * @param registry - The registry from which fields and templates are obtained\n * @returns - The `Field` component that is used to render the actual field data\n */\nfunction getFieldComponent<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  schema: S,\n  uiOptions: UIOptionsType<T, S, F>,\n  idSchema: IdSchema<T>,\n  registry: Registry<T, S, F>\n) {\n  const field = uiOptions.field;\n  const { fields, translateString } = registry;\n  if (typeof field === 'function') {\n    return field;\n  }\n  if (typeof field === 'string' && field in fields) {\n    return fields[field];\n  }\n\n  const schemaType = getSchemaType(schema);\n  const type: string = Array.isArray(schemaType) ? schemaType[0] : schemaType || '';\n  const componentName = COMPONENT_TYPES[type];\n\n  // If the type is not defined and the schema uses 'anyOf' or 'oneOf', don't\n  // render a field and let the MultiSchemaField component handle the form display\n  if (!componentName && (schema.anyOf || schema.oneOf)) {\n    return () => null;\n  }\n\n  return componentName in fields\n    ? fields[componentName]\n    : () => {\n        const UnsupportedFieldTemplate = getTemplate<'UnsupportedFieldTemplate', T, S, F>(\n          'UnsupportedFieldTemplate',\n          registry,\n          uiOptions\n        );\n\n        return (\n          <UnsupportedFieldTemplate\n            schema={schema}\n            idSchema={idSchema}\n            reason={translateString(TranslatableString.UnknownFieldType, [String(schema.type)])}\n            registry={registry}\n          />\n        );\n      };\n}\n\n/** The `SchemaFieldRender` component is the work-horse of react-jsonschema-form, determining what kind of real field to\n * render based on the `schema`, `uiSchema` and all the other props. It also deals with rendering the `anyOf` and\n * `oneOf` fields.\n *\n * @param props - The `FieldProps` for this component\n */\nfunction SchemaFieldRender<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema: _schema,\n    idSchema: _idSchema,\n    uiSchema,\n    formData,\n    errorSchema,\n    idPrefix,\n    idSeparator,\n    name,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    registry,\n    wasPropertyKeyModified = false,\n  } = props;\n  const { formContext, schemaUtils, globalUiOptions } = registry;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n  const FieldTemplate = getTemplate<'FieldTemplate', T, S, F>('FieldTemplate', registry, uiOptions);\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    uiOptions\n  );\n  const FieldHelpTemplate = getTemplate<'FieldHelpTemplate', T, S, F>('FieldHelpTemplate', registry, uiOptions);\n  const FieldErrorTemplate = getTemplate<'FieldErrorTemplate', T, S, F>('FieldErrorTemplate', registry, uiOptions);\n  const schema = schemaUtils.retrieveSchema(_schema, formData);\n  const fieldId = _idSchema[ID_KEY];\n  const idSchema = mergeObjects(\n    schemaUtils.toIdSchema(schema, fieldId, formData, idPrefix, idSeparator),\n    _idSchema\n  ) as IdSchema<T>;\n\n  /** Intermediary `onChange` handler for field components that will inject the `id` of the current field into the\n   * `onChange` chain if it is not already being provided from a deeper level in the hierarchy\n   */\n  const handleFieldComponentChange = useCallback(\n    (formData: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const theId = id || fieldId;\n      return onChange(formData, newErrorSchema, theId);\n    },\n    [fieldId, onChange]\n  );\n\n  const FieldComponent = getFieldComponent<T, S, F>(schema, uiOptions, idSchema, registry);\n  const disabled = Boolean(props.disabled || uiOptions.disabled);\n  const readonly = Boolean(props.readonly || uiOptions.readonly || props.schema.readOnly || schema.readOnly);\n  const uiSchemaHideError = uiOptions.hideError;\n  // Set hideError to the value provided in the uiSchema, otherwise stick with the prop to propagate to children\n  const hideError = uiSchemaHideError === undefined ? props.hideError : Boolean(uiSchemaHideError);\n  const autofocus = Boolean(props.autofocus || uiOptions.autofocus);\n  if (Object.keys(schema).length === 0) {\n    return null;\n  }\n\n  const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n\n  const { __errors, ...fieldErrorSchema } = errorSchema || {};\n  // See #439: uiSchema: Don't pass consumed class names or style to child components\n  const fieldUiSchema = omit(uiSchema, ['ui:classNames', 'classNames', 'ui:style']);\n  if (UI_OPTIONS_KEY in fieldUiSchema) {\n    fieldUiSchema[UI_OPTIONS_KEY] = omit(fieldUiSchema[UI_OPTIONS_KEY], ['classNames', 'style']);\n  }\n\n  const field = (\n    <FieldComponent\n      {...props}\n      onChange={handleFieldComponentChange}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={fieldUiSchema}\n      disabled={disabled}\n      readonly={readonly}\n      hideError={hideError}\n      autofocus={autofocus}\n      errorSchema={fieldErrorSchema}\n      formContext={formContext}\n      rawErrors={__errors}\n    />\n  );\n\n  const id = idSchema[ID_KEY];\n\n  // If this schema has a title defined, but the user has set a new key/label, retain their input.\n  let label;\n  if (wasPropertyKeyModified) {\n    label = name;\n  } else {\n    label = ADDITIONAL_PROPERTY_FLAG in schema ? name : uiOptions.title || props.schema.title || schema.title || name;\n  }\n\n  const description = uiOptions.description || props.schema.description || schema.description || '';\n  const help = uiOptions.help;\n  const hidden = uiOptions.widget === 'hidden';\n\n  const classNames = ['form-group', 'field', `field-${getSchemaType(schema)}`];\n  if (!hideError && __errors && __errors.length > 0) {\n    classNames.push('field-error has-error has-danger');\n  }\n  if (uiSchema?.classNames) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\n        \"'uiSchema.classNames' is deprecated and may be removed in a major release; Use 'ui:classNames' instead.\"\n      );\n    }\n    classNames.push(uiSchema.classNames);\n  }\n  if (uiOptions.classNames) {\n    classNames.push(uiOptions.classNames);\n  }\n\n  const helpComponent = (\n    <FieldHelpTemplate\n      help={help}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      hasErrors={!hideError && __errors && __errors.length > 0}\n      registry={registry}\n    />\n  );\n  const errorsComponent = hideError ? undefined : (\n    <FieldErrorTemplate\n      errors={__errors}\n      errorSchema={errorSchema}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n  const fieldProps: Omit<FieldTemplateProps<T, S, F>, 'children'> = {\n    description: (\n      <DescriptionFieldTemplate\n        id={descriptionId<T>(id)}\n        description={description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n    ),\n    rawDescription: description,\n    help: helpComponent,\n    rawHelp: typeof help === 'string' ? help : undefined,\n    errors: errorsComponent,\n    rawErrors: hideError ? undefined : __errors,\n    id,\n    label,\n    hidden,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    disabled,\n    readonly,\n    hideError,\n    displayLabel,\n    classNames: classNames.join(' ').trim(),\n    style: uiOptions.style,\n    formContext,\n    formData,\n    schema,\n    uiSchema,\n    registry,\n  };\n\n  const _AnyOfField = registry.fields.AnyOfField;\n  const _OneOfField = registry.fields.OneOfField;\n  const isReplacingAnyOrOneOf = uiSchema?.['ui:field'] && uiSchema?.['ui:fieldReplacesAnyOrOneOf'] === true;\n\n  return (\n    <FieldTemplate {...fieldProps}>\n      <>\n        {field}\n        {/*\n        If the schema `anyOf` or 'oneOf' can be rendered as a select control, don't\n        render the selection and let `StringField` component handle\n        rendering\n      */}\n        {schema.anyOf && !isReplacingAnyOrOneOf && !schemaUtils.isSelect(schema) && (\n          <_AnyOfField\n            name={name}\n            disabled={disabled}\n            readonly={readonly}\n            hideError={hideError}\n            errorSchema={errorSchema}\n            formData={formData}\n            formContext={formContext}\n            idPrefix={idPrefix}\n            idSchema={idSchema}\n            idSeparator={idSeparator}\n            onBlur={props.onBlur}\n            onChange={props.onChange}\n            onFocus={props.onFocus}\n            options={schema.anyOf.map((_schema) =>\n              schemaUtils.retrieveSchema(isObject(_schema) ? (_schema as S) : ({} as S), formData)\n            )}\n            baseType={schema.type}\n            registry={registry}\n            schema={schema}\n            uiSchema={uiSchema}\n          />\n        )}\n        {schema.oneOf && !isReplacingAnyOrOneOf && !schemaUtils.isSelect(schema) && (\n          <_OneOfField\n            name={name}\n            disabled={disabled}\n            readonly={readonly}\n            hideError={hideError}\n            errorSchema={errorSchema}\n            formData={formData}\n            formContext={formContext}\n            idPrefix={idPrefix}\n            idSchema={idSchema}\n            idSeparator={idSeparator}\n            onBlur={props.onBlur}\n            onChange={props.onChange}\n            onFocus={props.onFocus}\n            options={schema.oneOf.map((_schema) =>\n              schemaUtils.retrieveSchema(isObject(_schema) ? (_schema as S) : ({} as S), formData)\n            )}\n            baseType={schema.type}\n            registry={registry}\n            schema={schema}\n            uiSchema={uiSchema}\n          />\n        )}\n      </>\n    </FieldTemplate>\n  );\n}\n\n/** The `SchemaField` component determines whether it is necessary to rerender the component based on any props changes\n * and if so, calls the `SchemaFieldRender` component with the props.\n */\nclass SchemaField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>\n> {\n  shouldComponentUpdate(nextProps: Readonly<FieldProps<T, S, F>>) {\n    return !deepEquals(this.props, nextProps);\n  }\n\n  render() {\n    return <SchemaFieldRender<T, S, F> {...this.props} />;\n  }\n}\n\nexport default SchemaField;\n","import {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  hasWidget,\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `StringField` component is used to render a schema field that represents a string type\n *\n * @param props - The `FieldProps` for this template\n */\nfunction StringField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled = false,\n    readonly = false,\n    autofocus = false,\n    onChange,\n    onBlur,\n    onFocus,\n    registry,\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext, schemaUtils, globalUiOptions } = registry;\n  const enumOptions = schemaUtils.isSelect(schema) ? optionsList(schema) : undefined;\n  let defaultWidget = enumOptions ? 'select' : 'text';\n  if (format && hasWidget<T, S, F>(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const { widget = defaultWidget, placeholder = '', title: uiTitle, ...options } = getUiOptions<T, S, F>(uiSchema);\n  const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n  const label = uiTitle ?? title ?? name;\n  const Widget = getWidget<T, S, F>(schema, widget, widgets);\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema.$id}\n      name={name}\n      label={label}\n      hideLabel={!displayLabel}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default StringField;\n","import { useEffect } from 'react';\nimport { FieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `NullField` component is used to render a field in the schema is null. It also ensures that the `formData` is\n * also set to null if it has no value.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction NullField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const { formData, onChange } = props;\n  useEffect(() => {\n    if (formData === undefined) {\n      onChange(null as unknown as T);\n    }\n  }, [formData, onChange]);\n\n  return null;\n}\n\nexport default NullField;\n","import { Field, FormContextType, RegistryFieldsType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport ArrayField from './ArrayField';\nimport BooleanField from './BooleanField';\nimport MultiSchemaField from './MultiSchemaField';\nimport NumberField from './NumberField';\nimport ObjectField from './ObjectField';\nimport SchemaField from './SchemaField';\nimport StringField from './StringField';\nimport NullField from './NullField';\n\nfunction fields<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryFieldsType<T, S, F> {\n  return {\n    AnyOfField: MultiSchemaField,\n    ArrayField: ArrayField as unknown as Field<T, S, F>,\n    // ArrayField falls back to SchemaField if ArraySchemaField is not defined, which it isn't by default\n    BooleanField,\n    NumberField,\n    ObjectField,\n    OneOfField: MultiSchemaField,\n    SchemaField,\n    StringField,\n    NullField,\n  };\n}\n\nexport default fields;\n","import {\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  ArrayFieldDescriptionProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldDescriptionTemplate` component renders a `DescriptionFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldDescriptionProps` for the component\n */\nexport default function ArrayFieldDescriptionTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldDescriptionProps<T, S, F>) {\n  const { idSchema, description, registry, schema, uiSchema } = props;\n  const options = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions);\n  const { label: displayLabel = true } = options;\n  if (!description || !displayLabel) {\n    return null;\n  }\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  return (\n    <DescriptionFieldTemplate\n      id={descriptionId<T>(idSchema)}\n      description={description}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n","import { CSSProperties } from 'react';\nimport { ArrayFieldTemplateItemType, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldItemTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\n  const {\n    children,\n    className,\n    disabled,\n    hasToolbar,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    hasCopy,\n    index,\n    onCopyIndexClick,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    registry,\n    uiSchema,\n  } = props;\n  const { CopyButton, MoveDownButton, MoveUpButton, RemoveButton } = registry.templates.ButtonTemplates;\n  const btnStyle: CSSProperties = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: 'bold',\n  };\n  return (\n    <div className={className}>\n      <div className={hasToolbar ? 'col-xs-9' : 'col-xs-12'}>{children}</div>\n      {hasToolbar && (\n        <div className='col-xs-3 array-item-toolbox'>\n          <div\n            className='btn-group'\n            style={{\n              display: 'flex',\n              justifyContent: 'space-around',\n            }}\n          >\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveUpButton\n                style={btnStyle}\n                disabled={disabled || readonly || !hasMoveUp}\n                onClick={onReorderClick(index, index - 1)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveDownButton\n                style={btnStyle}\n                disabled={disabled || readonly || !hasMoveDown}\n                onClick={onReorderClick(index, index + 1)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {hasCopy && (\n              <CopyButton\n                style={btnStyle}\n                disabled={disabled || readonly}\n                onClick={onCopyIndexClick(index)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {hasRemove && (\n              <RemoveButton\n                style={btnStyle}\n                disabled={disabled || readonly}\n                onClick={onDropIndexClick(index)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTemplateProps,\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const {\n    canAdd,\n    className,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate<'ArrayFieldDescriptionTemplate', T, S, F>(\n    'ArrayFieldDescriptionTemplate',\n    registry,\n    uiOptions\n  );\n  const ArrayFieldItemTemplate = getTemplate<'ArrayFieldItemTemplate', T, S, F>(\n    'ArrayFieldItemTemplate',\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<'ArrayFieldTitleTemplate', T, S, F>(\n    'ArrayFieldTitleTemplate',\n    registry,\n    uiOptions\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset className={className} id={idSchema.$id}>\n      <ArrayFieldTitleTemplate\n        idSchema={idSchema}\n        title={uiOptions.title || title}\n        required={required}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <ArrayFieldDescriptionTemplate\n        idSchema={idSchema}\n        description={uiOptions.description || schema.description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <div className='row array-item-list'>\n        {items &&\n          items.map(({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\n            <ArrayFieldItemTemplate key={key} {...itemProps} />\n          ))}\n      </div>\n      {canAdd && (\n        <AddButton\n          className='array-item-add'\n          onClick={onAddClick}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import {\n  getTemplate,\n  getUiOptions,\n  titleId,\n  ArrayFieldTitleProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldTitleTemplate` component renders a `TitleFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldTitleProps` for the component\n */\nexport default function ArrayFieldTitleTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTitleProps<T, S, F>) {\n  const { idSchema, title, schema, uiSchema, required, registry } = props;\n  const options = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions);\n  const { label: displayLabel = true } = options;\n  if (!title || !displayLabel) {\n    return null;\n  }\n  const TitleFieldTemplate: TemplatesType<T, S, F>['TitleFieldTemplate'] = getTemplate<'TitleFieldTemplate', T, S, F>(\n    'TitleFieldTemplate',\n    registry,\n    options\n  );\n  return (\n    <TitleFieldTemplate\n      id={titleId<T>(idSchema)}\n      title={title}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  BaseInputTemplateProps,\n  examplesId,\n  getInputProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\n * It is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\n * It can be customized/overridden for other themes or individual implementations as needed.\n *\n * @param props - The `WidgetProps` for this template\n */\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: BaseInputTemplateProps<T, S, F>) {\n  const {\n    id,\n    name, // remove this from ...rest\n    value,\n    readonly,\n    disabled,\n    autofocus,\n    onBlur,\n    onFocus,\n    onChange,\n    onChangeOverride,\n    options,\n    schema,\n    uiSchema,\n    formContext,\n    registry,\n    rawErrors,\n    type,\n    hideLabel, // remove this from ...rest\n    hideError, // remove this from ...rest\n    ...rest\n  } = props;\n\n  // Note: since React 15.2.0 we can't forward unknown element attributes, so we\n  // exclude the \"options\" and \"schema\" ones here.\n  if (!id) {\n    console.log('No id for', props);\n    throw new Error(`no id for props ${JSON.stringify(props)}`);\n  }\n  const inputProps = {\n    ...rest,\n    ...getInputProps<T, S, F>(schema, type, options),\n  };\n\n  let inputValue;\n  if (inputProps.type === 'number' || inputProps.type === 'integer') {\n    inputValue = value || value === 0 ? value : '';\n  } else {\n    inputValue = value == null ? '' : value;\n  }\n\n  const _onChange = useCallback(\n    ({ target: { value } }: ChangeEvent<HTMLInputElement>) => onChange(value === '' ? options.emptyValue : value),\n    [onChange, options]\n  );\n  const _onBlur = useCallback(({ target: { value } }: FocusEvent<HTMLInputElement>) => onBlur(id, value), [onBlur, id]);\n  const _onFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) => onFocus(id, value),\n    [onFocus, id]\n  );\n\n  return (\n    <>\n      <input\n        id={id}\n        name={id}\n        className='form-control'\n        readOnly={readonly}\n        disabled={disabled}\n        autoFocus={autofocus}\n        value={inputValue}\n        {...inputProps}\n        list={schema.examples ? examplesId<T>(id) : undefined}\n        onChange={onChangeOverride || _onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {Array.isArray(schema.examples) && (\n        <datalist key={`datalist_${id}`} id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(schema.default && !schema.examples.includes(schema.default) ? ([schema.default] as string[]) : [])\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      )}\n    </>\n  );\n}\n","import { getSubmitButtonOptions, FormContextType, RJSFSchema, StrictRJSFSchema, SubmitButtonProps } from '@rjsf/utils';\n\n/** The `SubmitButton` renders a button that represent the `Submit` action on a form\n */\nexport default function SubmitButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ uiSchema }: SubmitButtonProps<T, S, F>) {\n  const { submitText, norender, props: submitButtonProps = {} } = getSubmitButtonOptions<T, S, F>(uiSchema);\n  if (norender) {\n    return null;\n  }\n  return (\n    <div>\n      <button type='submit' {...submitButtonProps} className={`btn btn-info ${submitButtonProps.className || ''}`}>\n        {submitText}\n      </button>\n    </div>\n  );\n}\n","import { FormContextType, IconButtonProps, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\n\nexport default function IconButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const { iconType = 'default', icon, className, uiSchema, registry, ...otherProps } = props;\n  return (\n    <button type='button' className={`btn btn-${iconType} ${className}`} {...otherProps}>\n      <i className={`glyphicon glyphicon-${icon}`} />\n    </button>\n  );\n}\n\nexport function CopyButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.CopyButton)}\n      className='array-item-copy'\n      {...props}\n      icon='copy'\n    />\n  );\n}\n\nexport function MoveDownButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.MoveDownButton)}\n      className='array-item-move-down'\n      {...props}\n      icon='arrow-down'\n    />\n  );\n}\n\nexport function MoveUpButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.MoveUpButton)}\n      className='array-item-move-up'\n      {...props}\n      icon='arrow-up'\n    />\n  );\n}\n\nexport function RemoveButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.RemoveButton)}\n      className='array-item-remove'\n      {...props}\n      iconType='danger'\n      icon='remove'\n    />\n  );\n}\n","import { FormContextType, IconButtonProps, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\n\nimport IconButton from './IconButton';\n\n/** The `AddButton` renders a button that represent the `Add` action on a form\n */\nexport default function AddButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  className,\n  onClick,\n  disabled,\n  registry,\n}: IconButtonProps<T, S, F>) {\n  const { translateString } = registry;\n  return (\n    <div className='row'>\n      <p className={`col-xs-3 col-xs-offset-9 text-right ${className}`}>\n        <IconButton\n          iconType='info'\n          icon='plus'\n          className='btn-add col-xs-12'\n          title={translateString(TranslatableString.AddButton)}\n          onClick={onClick}\n          disabled={disabled}\n          registry={registry}\n        />\n      </p>\n    </div>\n  );\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, TemplatesType } from '@rjsf/utils';\n\nimport SubmitButton from './SubmitButton';\nimport AddButton from './AddButton';\nimport { CopyButton, MoveDownButton, MoveUpButton, RemoveButton } from './IconButton';\n\nfunction buttonTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): TemplatesType<T, S, F>['ButtonTemplates'] {\n  return {\n    SubmitButton,\n    AddButton,\n    CopyButton,\n    MoveDownButton,\n    MoveUpButton,\n    RemoveButton,\n  };\n}\n\nexport default buttonTemplates;\n","import { DescriptionFieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `DescriptionField` is the template to use to render the description of a field\n *\n * @param props - The `DescriptionFieldProps` for this component\n */\nexport default function DescriptionField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: DescriptionFieldProps<T, S, F>) {\n  const { id, description } = props;\n  if (!description) {\n    return null;\n  }\n  if (typeof description === 'string') {\n    return (\n      <p id={id} className='field-description'>\n        {description}\n      </p>\n    );\n  } else {\n    return (\n      <div id={id} className='field-description'>\n        {description}\n      </div>\n    );\n  }\n}\n","import {\n  ErrorListProps,\n  FormContextType,\n  RJSFValidationError,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\n\n/** The `ErrorList` component is the template that renders the all the errors associated with the fields in the `Form`\n *\n * @param props - The `ErrorListProps` for this component\n */\nexport default function ErrorList<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  errors,\n  registry,\n}: ErrorListProps<T, S, F>) {\n  const { translateString } = registry;\n  return (\n    <div className='panel panel-danger errors'>\n      <div className='panel-heading'>\n        <h3 className='panel-title'>{translateString(TranslatableString.ErrorsLabel)}</h3>\n      </div>\n      <ul className='list-group'>\n        {errors.map((error: RJSFValidationError, i: number) => {\n          return (\n            <li key={i} className='list-group-item text-danger'>\n              {error.stack}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","const REQUIRED_FIELD_SYMBOL = '*';\n\nexport type LabelProps = {\n  /** The label for the field */\n  label?: string;\n  /** A boolean value stating if the field is required */\n  required?: boolean;\n  /** The id of the input field being labeled */\n  id?: string;\n};\n\n/** Renders a label for a field\n *\n * @param props - The `LabelProps` for this component\n */\nexport default function Label(props: LabelProps) {\n  const { label, required, id } = props;\n  if (!label) {\n    return null;\n  }\n  return (\n    <label className='control-label' htmlFor={id}>\n      {label}\n      {required && <span className='required'>{REQUIRED_FIELD_SYMBOL}</span>}\n    </label>\n  );\n}\n","import {\n  FieldTemplateProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  getTemplate,\n  getUiOptions,\n} from '@rjsf/utils';\n\nimport Label from './Label';\n\n/** The `FieldTemplate` component is the template used by `SchemaField` to render any field. It renders the field\n * content, (label, description, children, errors and help) inside of a `WrapIfAdditional` component.\n *\n * @param props - The `FieldTemplateProps` for this component\n */\nexport default function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldTemplateProps<T, S, F>) {\n  const { id, label, children, errors, help, description, hidden, required, displayLabel, registry, uiSchema } = props;\n  const uiOptions = getUiOptions(uiSchema);\n  const WrapIfAdditionalTemplate = getTemplate<'WrapIfAdditionalTemplate', T, S, F>(\n    'WrapIfAdditionalTemplate',\n    registry,\n    uiOptions\n  );\n  if (hidden) {\n    return <div className='hidden'>{children}</div>;\n  }\n  return (\n    <WrapIfAdditionalTemplate {...props}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </WrapIfAdditionalTemplate>\n  );\n}\n","import { errorId, FieldErrorProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props;\n  if (errors.length === 0) {\n    return null;\n  }\n  const id = errorId<T>(idSchema);\n\n  return (\n    <div>\n      <ul id={id} className='error-detail bs-callout bs-callout-info'>\n        {errors\n          .filter((elem) => !!elem)\n          .map((error, index: number) => {\n            return (\n              <li className='text-danger' key={index}>\n                {error}\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","import { helpId, FieldHelpProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `FieldHelpTemplate` component renders any help desired for a field\n *\n * @param props - The `FieldHelpProps` to be rendered\n */\nexport default function FieldHelpTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldHelpProps<T, S, F>) {\n  const { idSchema, help } = props;\n  if (!help) {\n    return null;\n  }\n  const id = helpId<T>(idSchema);\n  if (typeof help === 'string') {\n    return (\n      <p id={id} className='help-block'>\n        {help}\n      </p>\n    );\n  }\n  return (\n    <div id={id} className='help-block'>\n      {help}\n    </div>\n  );\n}\n","import {\n  FormContextType,\n  ObjectFieldTemplatePropertyType,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  canExpand,\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  titleId,\n} from '@rjsf/utils';\n\n/** The `ObjectFieldTemplate` is the template to use to render all the inner properties of an object along with the\n * title and description if available. If the object is expandable, then an `AddButton` is also rendered after all\n * the properties.\n *\n * @param props - The `ObjectFieldTemplateProps` for this component\n */\nexport default function ObjectFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ObjectFieldTemplateProps<T, S, F>) {\n  const {\n    description,\n    disabled,\n    formData,\n    idSchema,\n    onAddClick,\n    properties,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n    uiSchema,\n  } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const TitleFieldTemplate = getTemplate<'TitleFieldTemplate', T, S, F>('TitleFieldTemplate', registry, options);\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset id={idSchema.$id}>\n      {title && (\n        <TitleFieldTemplate\n          id={titleId<T>(idSchema)}\n          title={title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {description && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(idSchema)}\n          description={description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {properties.map((prop: ObjectFieldTemplatePropertyType) => prop.content)}\n      {canExpand<T, S, F>(schema, uiSchema, formData) && (\n        <AddButton\n          className='object-property-expand'\n          onClick={onAddClick(schema)}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import { FormContextType, TitleFieldProps, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nconst REQUIRED_FIELD_SYMBOL = '*';\n\n/** The `TitleField` is the template to use to render the title of a field\n *\n * @param props - The `TitleFieldProps` for this component\n */\nexport default function TitleField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: TitleFieldProps<T, S, F>\n) {\n  const { id, title, required } = props;\n  return (\n    <legend id={id}>\n      {title}\n      {required && <span className='required'>{REQUIRED_FIELD_SYMBOL}</span>}\n    </legend>\n  );\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, TranslatableString, UnsupportedFieldProps } from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\n\n/** The `UnsupportedField` component is used to render a field in the schema is one that is not supported by\n * react-jsonschema-form.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction UnsupportedField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: UnsupportedFieldProps<T, S, F>\n) {\n  const { schema, idSchema, reason, registry } = props;\n  const { translateString } = registry;\n  let translateEnum: TranslatableString = TranslatableString.UnsupportedField;\n  const translateParams: string[] = [];\n  if (idSchema && idSchema.$id) {\n    translateEnum = TranslatableString.UnsupportedFieldWithId;\n    translateParams.push(idSchema.$id);\n  }\n  if (reason) {\n    translateEnum =\n      translateEnum === TranslatableString.UnsupportedField\n        ? TranslatableString.UnsupportedFieldWithReason\n        : TranslatableString.UnsupportedFieldWithIdAndReason;\n    translateParams.push(reason);\n  }\n  return (\n    <div className='unsupported-field'>\n      <p>\n        <Markdown>{translateString(translateEnum, translateParams)}</Markdown>\n      </p>\n      {schema && <pre>{JSON.stringify(schema, null, 2)}</pre>}\n    </div>\n  );\n}\n\nexport default UnsupportedField;\n","import {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WrapIfAdditionalTemplateProps,\n} from '@rjsf/utils';\n\nimport Label from './FieldTemplate/Label';\n\n/** The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\n * part of an `additionalProperties` part of a schema.\n *\n * @param props - The `WrapIfAdditionalProps` for this component\n */\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WrapIfAdditionalTemplateProps<T, S, F>) {\n  const {\n    id,\n    classNames,\n    style,\n    disabled,\n    label,\n    onKeyChange,\n    onDropPropertyClick,\n    readonly,\n    required,\n    schema,\n    children,\n    uiSchema,\n    registry,\n  } = props;\n  const { templates, translateString } = registry;\n  // Button templates are not overridden in the uiSchema\n  const { RemoveButton } = templates.ButtonTemplates;\n  const keyLabel = translateString(TranslatableString.KeyLabel, [label]);\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n\n  if (!additional) {\n    return (\n      <div className={classNames} style={style}>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div className={classNames} style={style}>\n      <div className='row'>\n        <div className='col-xs-5 form-additional'>\n          <div className='form-group'>\n            <Label label={keyLabel} required={required} id={`${id}-key`} />\n            <input\n              className='form-control'\n              type='text'\n              id={`${id}-key`}\n              onBlur={(event) => onKeyChange(event.target.value)}\n              defaultValue={label}\n            />\n          </div>\n        </div>\n        <div className='form-additional form-group col-xs-5'>{children}</div>\n        <div className='col-xs-2'>\n          <RemoveButton\n            className='array-item-remove btn-block'\n            style={{ border: '0' }}\n            disabled={disabled || readonly}\n            onClick={onDropPropertyClick(label)}\n            uiSchema={uiSchema}\n            registry={registry}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, TemplatesType } from '@rjsf/utils';\n\nimport ArrayFieldDescriptionTemplate from './ArrayFieldDescriptionTemplate';\nimport ArrayFieldItemTemplate from './ArrayFieldItemTemplate';\nimport ArrayFieldTemplate from './ArrayFieldTemplate';\nimport ArrayFieldTitleTemplate from './ArrayFieldTitleTemplate';\nimport BaseInputTemplate from './BaseInputTemplate';\nimport ButtonTemplates from './ButtonTemplates';\nimport DescriptionField from './DescriptionField';\nimport ErrorList from './ErrorList';\nimport FieldTemplate from './FieldTemplate';\nimport FieldErrorTemplate from './FieldErrorTemplate';\nimport FieldHelpTemplate from './FieldHelpTemplate';\nimport ObjectFieldTemplate from './ObjectFieldTemplate';\nimport TitleField from './TitleField';\nimport UnsupportedField from './UnsupportedField';\nimport WrapIfAdditionalTemplate from './WrapIfAdditionalTemplate';\n\nfunction templates<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(): TemplatesType<\n  T,\n  S,\n  F\n> {\n  return {\n    ArrayFieldDescriptionTemplate,\n    ArrayFieldItemTemplate,\n    ArrayFieldTemplate,\n    ArrayFieldTitleTemplate,\n    ButtonTemplates: ButtonTemplates<T, S, F>(),\n    BaseInputTemplate,\n    DescriptionFieldTemplate: DescriptionField,\n    ErrorListTemplate: ErrorList,\n    FieldTemplate,\n    FieldErrorTemplate,\n    FieldHelpTemplate,\n    ObjectFieldTemplate,\n    TitleFieldTemplate: TitleField,\n    UnsupportedFieldTemplate: UnsupportedField,\n    WrapIfAdditionalTemplate,\n  };\n}\n\nexport default templates;\n","import { MouseEvent, useCallback, useEffect, useReducer, useState } from 'react';\nimport {\n  ariaDescribedByIds,\n  parseDateString,\n  toDateString,\n  pad,\n  DateObject,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WidgetProps,\n} from '@rjsf/utils';\n\nfunction rangeOptions(start: number, stop: number) {\n  const options = [];\n  for (let i = start; i <= stop; i++) {\n    options.push({ value: i, label: pad(i, 2) });\n  }\n  return options;\n}\n\nfunction readyForChange(state: DateObject) {\n  return Object.values(state).every((value) => value !== -1);\n}\n\nfunction dateElementProps(\n  state: DateObject,\n  time: boolean,\n  yearsRange: [number, number] = [1900, new Date().getFullYear() + 2]\n) {\n  const { year, month, day, hour, minute, second } = state;\n  const data = [\n    {\n      type: 'year',\n      range: yearsRange,\n      value: year,\n    },\n    { type: 'month', range: [1, 12], value: month },\n    { type: 'day', range: [1, 31], value: day },\n  ] as { type: string; range: [number, number]; value: number | undefined }[];\n  if (time) {\n    data.push(\n      { type: 'hour', range: [0, 23], value: hour },\n      { type: 'minute', range: [0, 59], value: minute },\n      { type: 'second', range: [0, 59], value: second }\n    );\n  }\n  return data;\n}\n\ntype DateElementProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> = Pick<\n  WidgetProps<T, S, F>,\n  'value' | 'name' | 'disabled' | 'readonly' | 'autofocus' | 'registry' | 'onBlur' | 'onFocus'\n> & {\n  rootId: string;\n  select: (property: keyof DateObject, value: any) => void;\n  type: string;\n  range: [number, number];\n};\n\nfunction DateElement<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  type,\n  range,\n  value,\n  select,\n  rootId,\n  name,\n  disabled,\n  readonly,\n  autofocus,\n  registry,\n  onBlur,\n  onFocus,\n}: DateElementProps<T, S, F>) {\n  const id = rootId + '_' + type;\n  const { SelectWidget } = registry.widgets;\n  return (\n    <SelectWidget\n      schema={{ type: 'integer' } as S}\n      id={id}\n      name={name}\n      className='form-control'\n      options={{ enumOptions: rangeOptions(range[0], range[1]) }}\n      placeholder={type}\n      value={value}\n      disabled={disabled}\n      readonly={readonly}\n      autofocus={autofocus}\n      onChange={(value: any) => select(type as keyof DateObject, value)}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      registry={registry}\n      label=''\n      aria-describedby={ariaDescribedByIds<T>(rootId)}\n    />\n  );\n}\n\n/** The `AltDateWidget` is an alternative widget for rendering date properties.\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  time = false,\n  disabled = false,\n  readonly = false,\n  autofocus = false,\n  options,\n  id,\n  name,\n  registry,\n  onBlur,\n  onFocus,\n  onChange,\n  value,\n}: WidgetProps<T, S, F>) {\n  const { translateString } = registry;\n  const [lastValue, setLastValue] = useState(value);\n  const [state, setState] = useReducer((state: DateObject, action: Partial<DateObject>) => {\n    return { ...state, ...action };\n  }, parseDateString(value, time));\n\n  useEffect(() => {\n    const stateValue = toDateString(state, time);\n    if (readyForChange(state) && stateValue !== value) {\n      // The user changed the date to a new valid data via the comboboxes, so call onChange\n      onChange(stateValue);\n    } else if (lastValue !== value) {\n      // We got a new value in the props\n      setLastValue(value);\n      setState(parseDateString(value, time));\n    }\n  }, [time, value, onChange, state, lastValue]);\n\n  const handleChange = useCallback((property: keyof DateObject, value: string) => {\n    setState({ [property]: value });\n  }, []);\n\n  const handleSetNow = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      const nextState = parseDateString(new Date().toJSON(), time);\n      onChange(toDateString(nextState, time));\n    },\n    [disabled, readonly, time]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      onChange(undefined);\n    },\n    [disabled, readonly, onChange]\n  );\n\n  return (\n    <ul className='list-inline'>\n      {dateElementProps(state, time, options.yearsRange as [number, number] | undefined).map((elemProps, i) => (\n        <li className='list-inline-item' key={i}>\n          <DateElement\n            rootId={id}\n            name={name}\n            select={handleChange}\n            {...elemProps}\n            disabled={disabled}\n            readonly={readonly}\n            registry={registry}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            autofocus={autofocus && i === 0}\n          />\n        </li>\n      ))}\n      {(options.hideNowButton !== 'undefined' ? !options.hideNowButton : true) && (\n        <li className='list-inline-item'>\n          <a href='#' className='btn btn-info btn-now' onClick={handleSetNow}>\n            {translateString(TranslatableString.NowLabel)}\n          </a>\n        </li>\n      )}\n      {(options.hideClearButton !== 'undefined' ? !options.hideClearButton : true) && (\n        <li className='list-inline-item'>\n          <a href='#' className='btn btn-warning btn-clear' onClick={handleClear}>\n            {translateString(TranslatableString.ClearLabel)}\n          </a>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default AltDateWidget;\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `AltDateTimeWidget` is an alternative widget for rendering datetime properties.\n *  It uses the AltDateWidget for rendering, with the `time` prop set to true by default.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateTimeWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  time = true,\n  ...props\n}: WidgetProps<T, S, F>) {\n  const { AltDateWidget } = props.registry.widgets;\n  return <AltDateWidget time={time} {...props} />;\n}\n\nexport default AltDateTimeWidget;\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  descriptionId,\n  getTemplate,\n  labelValue,\n  schemaRequiresTrueValue,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `CheckBoxWidget` is a widget for rendering boolean properties.\n *  It is typically used to represent a boolean.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  schema,\n  uiSchema,\n  options,\n  id,\n  value,\n  disabled,\n  readonly,\n  label,\n  hideLabel,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  registry,\n}: WidgetProps<T, S, F>) {\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n  const required = schemaRequiresTrueValue<S>(schema);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.checked),\n    [onChange]\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => onBlur(id, event.target.checked),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => onFocus(id, event.target.checked),\n    [onFocus, id]\n  );\n  const description = options.description ?? schema.description;\n\n  return (\n    <div className={`checkbox ${disabled || readonly ? 'disabled' : ''}`}>\n      {!hideLabel && !!description && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(id)}\n          description={description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      <label>\n        <input\n          type='checkbox'\n          id={id}\n          name={id}\n          checked={typeof value === 'undefined' ? false : value}\n          required={required}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          aria-describedby={ariaDescribedByIds<T>(id)}\n        />\n        {labelValue(<span>{label}</span>, hideLabel)}\n      </label>\n    </div>\n  );\n}\n\nexport default CheckboxWidget;\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsDeselectValue,\n  enumOptionsIsSelected,\n  enumOptionsSelectValue,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  WidgetProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `CheckboxesWidget` is a widget for rendering checkbox groups.\n *  It is typically used to represent an array of enums.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxesWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  disabled,\n  options: { inline = false, enumOptions, enumDisabled, emptyValue },\n  value,\n  autofocus = false,\n  readonly,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const checkboxesValues = Array.isArray(value) ? value : [value];\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onFocus, id]\n  );\n  return (\n    <div className='checkboxes' id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, index) => {\n          const checked = enumOptionsIsSelected<S>(option.value, checkboxesValues);\n          const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n          const disabledCls = disabled || itemDisabled || readonly ? 'disabled' : '';\n\n          const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            if (event.target.checked) {\n              onChange(enumOptionsSelectValue<S>(index, checkboxesValues, enumOptions));\n            } else {\n              onChange(enumOptionsDeselectValue<S>(index, checkboxesValues, enumOptions));\n            }\n          };\n\n          const checkbox = (\n            <span>\n              <input\n                type='checkbox'\n                id={optionId(id, index)}\n                name={id}\n                checked={checked}\n                value={String(index)}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && index === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                aria-describedby={ariaDescribedByIds<T>(id)}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n          return inline ? (\n            <label key={index} className={`checkbox-inline ${disabledCls}`}>\n              {checkbox}\n            </label>\n          ) : (\n            <div key={index} className={`checkbox ${disabledCls}`}>\n              <label>{checkbox}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default CheckboxesWidget;\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `ColorWidget` component uses the `BaseInputTemplate` changing the type to `color` and disables it when it is\n * either disabled or readonly.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function ColorWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { disabled, readonly, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='color' {...props} disabled={disabled || readonly} />;\n}\n","import { useCallback } from 'react';\nimport { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `DateWidget` component uses the `BaseInputTemplate` changing the type to `date` and transforms\n * the value to undefined when it is falsy during the `onChange` handling.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { onChange, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const handleChange = useCallback((value: any) => onChange(value || undefined), [onChange]);\n\n  return <BaseInputTemplate type='date' {...props} onChange={handleChange} />;\n}\n","import {\n  getTemplate,\n  localToUTC,\n  utcToLocal,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `DateTimeWidget` component uses the `BaseInputTemplate` changing the type to `datetime-local` and transforms\n * the value to/from utc using the appropriate utility functions.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateTimeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { onChange, value, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return (\n    <BaseInputTemplate\n      type='datetime-local'\n      {...props}\n      value={utcToLocal(value)}\n      onChange={(value) => onChange(localToUTC(value))}\n    />\n  );\n}\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `EmailWidget` component uses the `BaseInputTemplate` changing the type to `email`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function EmailWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='email' {...props} />;\n}\n","import { ChangeEvent, useCallback, useMemo, useState } from 'react';\nimport {\n  dataURItoBlob,\n  FormContextType,\n  getTemplate,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WidgetProps,\n} from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\n\nfunction addNameToDataURL(dataURL: string, name: string) {\n  if (dataURL === null) {\n    return null;\n  }\n  return dataURL.replace(';base64', `;name=${encodeURIComponent(name)};base64`);\n}\n\ntype FileInfoType = {\n  dataURL?: string | null;\n  name: string;\n  size: number;\n  type: string;\n};\n\nfunction processFile(file: File): Promise<FileInfoType> {\n  const { name, size, type } = file;\n  return new Promise((resolve, reject) => {\n    const reader = new window.FileReader();\n    reader.onerror = reject;\n    reader.onload = (event) => {\n      if (typeof event.target?.result === 'string') {\n        resolve({\n          dataURL: addNameToDataURL(event.target.result, name),\n          name,\n          size,\n          type,\n        });\n      } else {\n        resolve({\n          dataURL: null,\n          name,\n          size,\n          type,\n        });\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction processFiles(files: FileList) {\n  return Promise.all(Array.from(files).map(processFile));\n}\n\nfunction FileInfoPreview<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  fileInfo,\n  registry,\n}: {\n  fileInfo: FileInfoType;\n  registry: Registry<T, S, F>;\n}) {\n  const { translateString } = registry;\n  const { dataURL, type, name } = fileInfo;\n  if (!dataURL) {\n    return null;\n  }\n\n  if (type.indexOf('image') !== -1) {\n    return <img src={dataURL} style={{ maxWidth: '100%' }} className='file-preview' />;\n  }\n\n  return (\n    <>\n      {' '}\n      <a download={`preview-${name}`} href={dataURL} className='file-download'>\n        {translateString(TranslatableString.PreviewLabel)}\n      </a>\n    </>\n  );\n}\n\nfunction FilesInfo<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  filesInfo,\n  registry,\n  preview,\n}: {\n  filesInfo: FileInfoType[];\n  registry: Registry<T, S, F>;\n  preview?: boolean;\n}) {\n  if (filesInfo.length === 0) {\n    return null;\n  }\n  const { translateString } = registry;\n  return (\n    <ul className='file-info'>\n      {filesInfo.map((fileInfo, key) => {\n        const { name, size, type } = fileInfo;\n        return (\n          <li key={key}>\n            <Markdown>{translateString(TranslatableString.FilesInfo, [name, type, String(size)])}</Markdown>\n            {preview && <FileInfoPreview<T, S, F> fileInfo={fileInfo} registry={registry} />}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction extractFileInfo(dataURLs: string[]) {\n  return dataURLs\n    .filter((dataURL) => dataURL)\n    .map((dataURL) => {\n      const { blob, name } = dataURItoBlob(dataURL);\n      return {\n        dataURL,\n        name: name,\n        size: blob.size,\n        type: blob.type,\n      };\n    });\n}\n\n/**\n *  The `FileWidget` is a widget for rendering file upload fields.\n *  It is typically used with a string property with data-url format.\n */\nfunction FileWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { disabled, readonly, required, multiple, onChange, value, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const extractedFilesInfo = useMemo(\n    () => (Array.isArray(value) ? extractFileInfo(value) : extractFileInfo([value])),\n    [value]\n  );\n  const [filesInfo, setFilesInfo] = useState<FileInfoType[]>(extractedFilesInfo);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      if (!event.target.files) {\n        return;\n      }\n      processFiles(event.target.files).then((filesInfoEvent) => {\n        setFilesInfo(filesInfoEvent);\n        const newValue = filesInfoEvent.map((fileInfo) => fileInfo.dataURL);\n        if (multiple) {\n          onChange(newValue);\n        } else {\n          onChange(newValue[0]);\n        }\n      });\n    },\n    [multiple, onChange]\n  );\n\n  return (\n    <div>\n      <BaseInputTemplate\n        {...props}\n        disabled={disabled || readonly}\n        type='file'\n        required={value ? false : required} // this turns off HTML required validation when a value exists\n        onChangeOverride={handleChange}\n        value=''\n        accept={options.accept ? String(options.accept) : undefined}\n      />\n      <FilesInfo<T, S, F> filesInfo={filesInfo} registry={registry} preview={options.filePreview} />\n    </div>\n  );\n}\n\nexport default FileWidget;\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `HiddenWidget` is a widget for rendering a hidden input field.\n *  It is typically used by setting type to \"hidden\".\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction HiddenWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  value,\n}: WidgetProps<T, S, F>) {\n  return <input type='hidden' id={id} name={id} value={typeof value === 'undefined' ? '' : value} />;\n}\n\nexport default HiddenWidget;\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `PasswordWidget` component uses the `BaseInputTemplate` changing the type to `password`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function PasswordWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='password' {...props} />;\n}\n","import { FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsIsSelected,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `RadioWidget` is a widget for rendering a radio group.\n *  It is typically used with a string property constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction RadioWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  id,\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled, inline, emptyValue } = options;\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onFocus, id]\n  );\n\n  return (\n    <div className='field-radio-group' id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, i) => {\n          const checked = enumOptionsIsSelected<S>(option.value, value);\n          const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n          const disabledCls = disabled || itemDisabled || readonly ? 'disabled' : '';\n\n          const handleChange = () => onChange(option.value);\n\n          const radio = (\n            <span>\n              <input\n                type='radio'\n                id={optionId(id, i)}\n                checked={checked}\n                name={id}\n                required={required}\n                value={String(i)}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && i === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                aria-describedby={ariaDescribedByIds<T>(id)}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n\n          return inline ? (\n            <label key={i} className={`radio-inline ${disabledCls}`}>\n              {radio}\n            </label>\n          ) : (\n            <div key={i} className={`radio ${disabledCls}`}>\n              <label>{radio}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default RadioWidget;\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `RangeWidget` component uses the `BaseInputTemplate` changing the type to `range` and wrapping the result\n * in a div, with the value along side it.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function RangeWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const {\n    value,\n    registry: {\n      templates: { BaseInputTemplate },\n    },\n  } = props;\n  return (\n    <div className='field-range-wrapper'>\n      <BaseInputTemplate type='range' {...props} />\n      <span className='range-view'>{value}</span>\n    </div>\n  );\n}\n","import { ChangeEvent, FocusEvent, SyntheticEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsIndexForValue,\n  enumOptionsValueForIndex,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\nfunction getValue(event: SyntheticEvent<HTMLSelectElement>, multiple: boolean) {\n  if (multiple) {\n    return Array.from((event.target as HTMLSelectElement).options)\n      .slice()\n      .filter((o) => o.selected)\n      .map((o) => o.value);\n  }\n  return (event.target as HTMLSelectElement).value;\n}\n\n/** The `SelectWidget` is a widget for rendering dropdowns.\n *  It is typically used with string properties constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction SelectWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  schema,\n  id,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  multiple = false,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n  placeholder,\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled, emptyValue: optEmptyVal } = options;\n  const emptyValue = multiple ? [] : '';\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onFocus(id, enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onFocus, id, schema, multiple, options]\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onBlur(id, enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onBlur, id, schema, multiple, options]\n  );\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onChange(enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onChange, schema, multiple, options]\n  );\n\n  const selectedIndexes = enumOptionsIndexForValue<S>(value, enumOptions, multiple);\n\n  return (\n    <select\n      id={id}\n      name={id}\n      multiple={multiple}\n      className='form-control'\n      value={typeof selectedIndexes === 'undefined' ? emptyValue : selectedIndexes}\n      required={required}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    >\n      {!multiple && schema.default === undefined && <option value=''>{placeholder}</option>}\n      {Array.isArray(enumOptions) &&\n        enumOptions.map(({ value, label }, i) => {\n          const disabled = enumDisabled && enumDisabled.indexOf(value) !== -1;\n          return (\n            <option key={i} value={String(i)} disabled={disabled}>\n              {label}\n            </option>\n          );\n        })}\n    </select>\n  );\n}\n\nexport default SelectWidget;\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport { ariaDescribedByIds, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TextareaWidget` is a widget for rendering input fields as textarea.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction TextareaWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  options = {},\n  placeholder,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const handleChange = useCallback(\n    ({ target: { value } }: ChangeEvent<HTMLTextAreaElement>) => onChange(value === '' ? options.emptyValue : value),\n    [onChange, options.emptyValue]\n  );\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onBlur(id, value),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onFocus(id, value),\n    [id, onFocus]\n  );\n\n  return (\n    <textarea\n      id={id}\n      name={id}\n      className='form-control'\n      value={value ? value : ''}\n      placeholder={placeholder}\n      required={required}\n      disabled={disabled}\n      readOnly={readonly}\n      autoFocus={autofocus}\n      rows={options.rows}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    />\n  );\n}\n\nTextareaWidget.defaultProps = {\n  autofocus: false,\n  options: {},\n};\n\nexport default TextareaWidget;\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TextWidget` component uses the `BaseInputTemplate`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function TextWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate {...props} />;\n}\n","import { useCallback } from 'react';\nimport { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TimeWidget` component uses the `BaseInputTemplate` changing the type to `time` and transforms\n * the value to undefined when it is falsy during the `onChange` handling.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function TimeWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { onChange, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const handleChange = useCallback((value: any) => onChange(value ? `${value}:00` : undefined), [onChange]);\n\n  return <BaseInputTemplate type='time' {...props} onChange={handleChange} />;\n}\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `URLWidget` component uses the `BaseInputTemplate` changing the type to `url`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function URLWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='url' {...props} />;\n}\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `UpDownWidget` component uses the `BaseInputTemplate` changing the type to `number`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function UpDownWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='number' {...props} />;\n}\n","import { FormContextType, RegistryWidgetsType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport AltDateWidget from './AltDateWidget';\nimport AltDateTimeWidget from './AltDateTimeWidget';\nimport CheckboxWidget from './CheckboxWidget';\nimport CheckboxesWidget from './CheckboxesWidget';\nimport ColorWidget from './ColorWidget';\nimport DateWidget from './DateWidget';\nimport DateTimeWidget from './DateTimeWidget';\nimport EmailWidget from './EmailWidget';\nimport FileWidget from './FileWidget';\nimport HiddenWidget from './HiddenWidget';\nimport PasswordWidget from './PasswordWidget';\nimport RadioWidget from './RadioWidget';\nimport RangeWidget from './RangeWidget';\nimport SelectWidget from './SelectWidget';\nimport TextareaWidget from './TextareaWidget';\nimport TextWidget from './TextWidget';\nimport TimeWidget from './TimeWidget';\nimport URLWidget from './URLWidget';\nimport UpDownWidget from './UpDownWidget';\n\nfunction widgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {\n    AltDateWidget,\n    AltDateTimeWidget,\n    CheckboxWidget,\n    CheckboxesWidget,\n    ColorWidget,\n    DateWidget,\n    DateTimeWidget,\n    EmailWidget,\n    FileWidget,\n    HiddenWidget,\n    PasswordWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    TextWidget,\n    TextareaWidget,\n    TimeWidget,\n    UpDownWidget,\n    URLWidget,\n  };\n}\n\nexport default widgets;\n","import { englishStringTranslator, FormContextType, Registry, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport fields from './components/fields';\nimport templates from './components/templates';\nimport widgets from './components/widgets';\n\n/** The default registry consists of all the fields, templates and widgets provided in the core implementation,\n * plus an empty `rootSchema` and `formContext. We omit schemaUtils here because it cannot be defaulted without a\n * rootSchema and validator. It will be added into the computed registry later in the Form.\n */\nexport default function getDefaultRegistry<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Omit<Registry<T, S, F>, 'schemaUtils'> {\n  return {\n    fields: fields<T, S, F>(),\n    templates: templates<T, S, F>(),\n    widgets: widgets<T, S, F>(),\n    rootSchema: {} as S,\n    formContext: {} as F,\n    translateString: englishStringTranslator,\n  };\n}\n","import { Component, ElementType, FormEvent, ReactNode, Ref, RefObject, createRef } from 'react';\nimport {\n  createSchemaUtils,\n  CustomValidator,\n  deepEquals,\n  ErrorSchema,\n  ErrorTransformer,\n  FormContextType,\n  GenericObjectType,\n  getTemplate,\n  getUiOptions,\n  IdSchema,\n  isObject,\n  mergeObjects,\n  NAME_KEY,\n  PathSchema,\n  StrictRJSFSchema,\n  Registry,\n  RegistryFieldsType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  RJSFValidationError,\n  RJSF_ADDITONAL_PROPERTIES_FLAG,\n  SchemaUtilsType,\n  shouldRender,\n  SUBMIT_BTN_OPTIONS_KEY,\n  TemplatesType,\n  toErrorList,\n  UiSchema,\n  UI_GLOBAL_OPTIONS_KEY,\n  UI_OPTIONS_KEY,\n  ValidationData,\n  validationDataMerge,\n  ValidatorType,\n} from '@rjsf/utils';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport _pick from 'lodash/pick';\nimport _toPath from 'lodash/toPath';\n\nimport getDefaultRegistry from '../getDefaultRegistry';\n\n/** The properties that are passed to the `Form` */\nexport interface FormProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** An implementation of the `ValidatorType` interface that is needed for form validation to work */\n  validator: ValidatorType<T, S, F>;\n  /** The optional children for the form, if provided, it will replace the default `SubmitButton` */\n  children?: ReactNode;\n  /** The uiSchema for the form */\n  uiSchema?: UiSchema<T, S, F>;\n  /** The data for the form, used to prefill a form with existing data */\n  formData?: T;\n  // Form presentation and behavior modifiers\n  /** You can provide a `formContext` object to the form, which is passed down to all fields and widgets. Useful for\n   * implementing context aware fields and widgets.\n   *\n   * NOTE: Setting `{readonlyAsDisabled: false}` on the formContext will make the antd theme treat readOnly fields as\n   * disabled.\n   */\n  formContext?: F;\n  /** To avoid collisions with existing ids in the DOM, it is possible to change the prefix used for ids;\n   * Default is `root`\n   */\n  idPrefix?: string;\n  /** To avoid using a path separator that is present in field names, it is possible to change the separator used for\n   * ids (Default is `_`)\n   */\n  idSeparator?: string;\n  /** It's possible to disable the whole form by setting the `disabled` prop. The `disabled` prop is then forwarded down\n   * to each field of the form. If you just want to disable some fields, see the `ui:disabled` parameter in `uiSchema`\n   */\n  disabled?: boolean;\n  /** It's possible to make the whole form read-only by setting the `readonly` prop. The `readonly` prop is then\n   * forwarded down to each field of the form. If you just want to make some fields read-only, see the `ui:readonly`\n   * parameter in `uiSchema`\n   */\n  readonly?: boolean;\n  // Form registry\n  /** The dictionary of registered fields in the form */\n  fields?: RegistryFieldsType<T, S, F>;\n  /** The dictionary of registered templates in the form; Partial allows a subset to be provided beyond the defaults */\n  templates?: Partial<Omit<TemplatesType<T, S, F>, 'ButtonTemplates'>> & {\n    ButtonTemplates?: Partial<TemplatesType<T, S, F>['ButtonTemplates']>;\n  };\n  /** The dictionary of registered widgets in the form */\n  widgets?: RegistryWidgetsType<T, S, F>;\n  // Callbacks\n  /** If you plan on being notified every time the form data are updated, you can pass an `onChange` handler, which will\n   * receive the same args as `onSubmit` any time a value is updated in the form. Can also return the `id` of the field\n   * that caused the change\n   */\n  onChange?: (data: IChangeEvent<T, S, F>, id?: string) => void;\n  /** To react when submitted form data are invalid, pass an `onError` handler. It will be passed the list of\n   * encountered errors\n   */\n  onError?: (errors: RJSFValidationError[]) => void;\n  /** You can pass a function as the `onSubmit` prop of your `Form` component to listen to when the form is submitted\n   * and its data are valid. It will be passed a result object having a `formData` attribute, which is the valid form\n   * data you're usually after. The original event will also be passed as a second parameter\n   */\n  onSubmit?: (data: IChangeEvent<T, S, F>, event: FormEvent<any>) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been touched, so you can pass\n   * an `onBlur` handler, which will receive the id of the input that was blurred and the field value\n   */\n  onBlur?: (id: string, data: any) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been focused, so you can pass\n   * an `onFocus` handler, which will receive the id of the input that is focused and the field value\n   */\n  onFocus?: (id: string, data: any) => void;\n  // <form /> HTML attributes\n  /** The value of this prop will be passed to the `accept-charset` HTML attribute on the form */\n  acceptcharset?: string;\n  /** The value of this prop will be passed to the `action` HTML attribute on the form\n   *\n   * NOTE: this just renders the `action` attribute in the HTML markup. There is no real network request being sent to\n   * this `action` on submit. Instead, react-jsonschema-form catches the submit event with `event.preventDefault()`\n   * and then calls the `onSubmit` function, where you could send a request programmatically with `fetch` or similar.\n   */\n  action?: string;\n  /** The value of this prop will be passed to the `autocomplete` HTML attribute on the form */\n  autoComplete?: string;\n  /** The value of this prop will be passed to the `class` HTML attribute on the form */\n  className?: string;\n  /** The value of this prop will be passed to the `enctype` HTML attribute on the form */\n  enctype?: string;\n  /** The value of this prop will be passed to the `id` HTML attribute on the form */\n  id?: string;\n  /** The value of this prop will be passed to the `name` HTML attribute on the form */\n  name?: string;\n  /** The value of this prop will be passed to the `method` HTML attribute on the form */\n  method?: string;\n  /** It's possible to change the default `form` tag name to a different HTML tag, which can be helpful if you are\n   * nesting forms. However, native browser form behaviour, such as submitting when the `Enter` key is pressed, may no\n   * longer work\n   */\n  tagName?: ElementType;\n  /** The value of this prop will be passed to the `target` HTML attribute on the form */\n  target?: string;\n  // Errors and validation\n  /** Formerly the `validate` prop; Takes a function that specifies custom validation rules for the form */\n  customValidate?: CustomValidator<T, S, F>;\n  /** This prop allows passing in custom errors that are augmented with the existing JSON Schema errors on the form; it\n   * can be used to implement asynchronous validation\n   */\n  extraErrors?: ErrorSchema<T>;\n  /** If set to true, turns off HTML5 validation on the form; Set to `false` by default */\n  noHtml5Validate?: boolean;\n  /** If set to true, turns off all validation. Set to `false` by default\n   *\n   * @deprecated - In a future release, this switch may be replaced by making `validator` prop optional\n   */\n  noValidate?: boolean;\n  /** If set to true, the form will perform validation and show any validation errors whenever the form data is changed,\n   * rather than just on submit\n   */\n  liveValidate?: boolean;\n  /** If `omitExtraData` and `liveOmit` are both set to true, then extra form data values that are not in any form field\n   * will be removed whenever `onChange` is called. Set to `false` by default\n   */\n  liveOmit?: boolean;\n  /** If set to true, then extra form data values that are not in any form field will be removed whenever `onSubmit` is\n   * called. Set to `false` by default.\n   */\n  omitExtraData?: boolean;\n  /** When this prop is set to `top` or 'bottom', a list of errors (or the custom error list defined in the `ErrorList`) will also\n   * show. When set to false, only inline input validation errors will be shown. Set to `top` by default\n   */\n  showErrorList?: false | 'top' | 'bottom';\n  /** A function can be passed to this prop in order to make modifications to the default errors resulting from JSON\n   * Schema validation\n   */\n  transformErrors?: ErrorTransformer<T, S, F>;\n  /** If set to true, then the first field with an error will receive the focus when the form is submitted with errors\n   */\n  focusOnFirstError?: boolean | ((error: RJSFValidationError) => void);\n  /** Optional string translation function, if provided, allows users to change the translation of the RJSF internal\n   * strings. Some strings contain replaceable parameter values as indicated by `%1`, `%2`, etc. The number after the\n   * `%` indicates the order of the parameter. The ordering of parameters is important because some languages may choose\n   * to put the second parameter before the first in its translation.\n   */\n  translateString?: Registry['translateString'];\n  // Private\n  /**\n   * _internalFormWrapper is currently used by the semantic-ui theme to provide a custom wrapper around `<Form />`\n   * that supports the proper rendering of those themes. To use this prop, one must pass a component that takes two\n   * props: `children` and `as`. That component, at minimum, should render the `children` inside of a <form /> tag\n   * unless `as` is provided, in which case, use the `as` prop in place of `<form />`.\n   * i.e.:\n   * ```\n   * export default function InternalForm({ children, as }) {\n   *   const FormTag = as || 'form';\n   *   return <FormTag>{children}</FormTag>;\n   * }\n   * ```\n   *\n   * Use at your own risk as this prop is private and may change at any time without notice.\n   */\n  _internalFormWrapper?: ElementType;\n  /** Support receiving a React ref to the Form\n   */\n  ref?: Ref<Form<T, S, F>>;\n}\n\n/** The data that is contained within the state for the `Form` */\nexport interface FormState<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** The uiSchema for the form */\n  uiSchema: UiSchema<T, S, F>;\n  /** The `IdSchema` for the form, computed from the `schema`, the `rootFieldId`, the `formData` and the `idPrefix` and\n   * `idSeparator` props.\n   */\n  idSchema: IdSchema<T>;\n  /** The schemaUtils implementation used by the `Form`, created from the `validator` and the `schema` */\n  schemaUtils: SchemaUtilsType<T, S, F>;\n  /** The current data for the form, computed from the `formData` prop and the changes made by the user */\n  formData?: T;\n  /** Flag indicating whether the form is in edit mode, true when `formData` is passed to the form, otherwise false */\n  edit: boolean;\n  /** The current list of errors for the form, includes `extraErrors` */\n  errors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form, includes `extraErrors` */\n  errorSchema: ErrorSchema<T>;\n  /** The current list of errors for the form directly from schema validation, does NOT include `extraErrors` */\n  schemaValidationErrors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form directly from schema validation, does NOT include\n   * `extraErrors`\n   */\n  schemaValidationErrorSchema: ErrorSchema<T>;\n}\n\n/** The event data passed when changes have been made to the form, includes everything from the `FormState` except\n * the schema validation errors. An additional `status` is added when returned from `onSubmit`\n */\nexport interface IChangeEvent<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>\n  extends Omit<FormState<T, S, F>, 'schemaValidationErrors' | 'schemaValidationErrorSchema'> {\n  /** The status of the form when submitted */\n  status?: 'submitted';\n}\n\n/** The `Form` component renders the outer form and all the fields defined in the `schema` */\nexport default class Form<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FormProps<T, S, F>, FormState<T, S, F>> {\n  /** The ref used to hold the `form` element, this needs to be `any` because `tagName` or `_internalFormWrapper` can\n   * provide any possible type here\n   */\n  formElement: RefObject<any>;\n\n  /** Constructs the `Form` from the `props`. Will setup the initial state from the props. It will also call the\n   * `onChange` handler if the initially provided `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param props - The initial props for the `Form`\n   */\n  constructor(props: FormProps<T, S, F>) {\n    super(props);\n\n    if (!props.validator) {\n      throw new Error('A validator is required for Form functionality to work');\n    }\n\n    this.state = this.getStateFromProps(props, props.formData);\n    if (this.props.onChange && !deepEquals(this.state.formData, this.props.formData)) {\n      this.props.onChange(this.state);\n    }\n    this.formElement = createRef();\n  }\n\n  /** React lifecycle method that gets called before new props are provided, updates the state based on new props. It\n   * will also call the`onChange` handler if the `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param nextProps - The new set of props about to be applied to the `Form`\n   */\n  UNSAFE_componentWillReceiveProps(nextProps: FormProps<T, S, F>) {\n    const nextState = this.getStateFromProps(nextProps, nextProps.formData);\n    if (\n      !deepEquals(nextState.formData, nextProps.formData) &&\n      !deepEquals(nextState.formData, this.state.formData) &&\n      nextProps.onChange\n    ) {\n      nextProps.onChange(nextState);\n    }\n    this.setState(nextState);\n  }\n\n  /** Extracts the updated state from the given `props` and `inputFormData`. As part of this process, the\n   * `inputFormData` is first processed to add any missing required defaults. After that, the data is run through the\n   * validation process IF required by the `props`.\n   *\n   * @param props - The props passed to the `Form`\n   * @param inputFormData - The new or current data for the `Form`\n   * @returns - The new state for the `Form`\n   */\n  getStateFromProps(props: FormProps<T, S, F>, inputFormData?: T): FormState<T, S, F> {\n    const state: FormState<T, S, F> = this.state || {};\n    const schema = 'schema' in props ? props.schema : this.props.schema;\n    const uiSchema: UiSchema<T, S, F> = ('uiSchema' in props ? props.uiSchema! : this.props.uiSchema!) || {};\n    const edit = typeof inputFormData !== 'undefined';\n    const liveValidate = 'liveValidate' in props ? props.liveValidate : this.props.liveValidate;\n    const mustValidate = edit && !props.noValidate && liveValidate;\n    const rootSchema = schema;\n    let schemaUtils: SchemaUtilsType<T, S, F> = state.schemaUtils;\n    if (!schemaUtils || schemaUtils.doesSchemaUtilsDiffer(props.validator, rootSchema)) {\n      schemaUtils = createSchemaUtils<T, S, F>(props.validator, rootSchema);\n    }\n    const formData: T = schemaUtils.getDefaultFormState(schema, inputFormData) as T;\n    const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n\n    const getCurrentErrors = (): ValidationData<T> => {\n      if (props.noValidate) {\n        return { errors: [], errorSchema: {} };\n      } else if (!props.liveValidate) {\n        return {\n          errors: state.schemaValidationErrors || [],\n          errorSchema: state.schemaValidationErrorSchema || {},\n        };\n      }\n      return {\n        errors: state.errors || [],\n        errorSchema: state.errorSchema || {},\n      };\n    };\n\n    let errors: RJSFValidationError[];\n    let errorSchema: ErrorSchema<T> | undefined;\n    let schemaValidationErrors: RJSFValidationError[] = state.schemaValidationErrors;\n    let schemaValidationErrorSchema: ErrorSchema<T> = state.schemaValidationErrorSchema;\n    if (mustValidate) {\n      const schemaValidation = this.validate(formData, schema, schemaUtils);\n      errors = schemaValidation.errors;\n      errorSchema = schemaValidation.errorSchema;\n      schemaValidationErrors = errors;\n      schemaValidationErrorSchema = errorSchema;\n    } else {\n      const currentErrors = getCurrentErrors();\n      errors = currentErrors.errors;\n      errorSchema = currentErrors.errorSchema;\n    }\n    if (props.extraErrors) {\n      const merged = validationDataMerge({ errorSchema, errors }, props.extraErrors);\n      errorSchema = merged.errorSchema;\n      errors = merged.errors;\n    }\n    const idSchema = schemaUtils.toIdSchema(\n      retrievedSchema,\n      uiSchema['ui:rootFieldId'],\n      formData,\n      props.idPrefix,\n      props.idSeparator\n    );\n    const nextState: FormState<T, S, F> = {\n      schemaUtils,\n      schema,\n      uiSchema,\n      idSchema,\n      formData,\n      edit,\n      errors,\n      errorSchema,\n      schemaValidationErrors,\n      schemaValidationErrorSchema,\n    };\n    return nextState;\n  }\n\n  /** React lifecycle method that is used to determine whether component should be updated.\n   *\n   * @param nextProps - The next version of the props\n   * @param nextState - The next version of the state\n   * @returns - True if the component should be updated, false otherwise\n   */\n  shouldComponentUpdate(nextProps: FormProps<T, S, F>, nextState: FormState<T, S, F>): boolean {\n    return shouldRender(this, nextProps, nextState);\n  }\n\n  /** Validates the `formData` against the `schema` using the `altSchemaUtils` (if provided otherwise it uses the\n   * `schemaUtils` in the state), returning the results.\n   *\n   * @param formData - The new form data to validate\n   * @param schema - The schema used to validate against\n   * @param altSchemaUtils - The alternate schemaUtils to use for validation\n   */\n  validate(\n    formData: T | undefined,\n    schema = this.props.schema,\n    altSchemaUtils?: SchemaUtilsType<T, S, F>\n  ): ValidationData<T> {\n    const schemaUtils = altSchemaUtils ? altSchemaUtils : this.state.schemaUtils;\n    const { customValidate, transformErrors, uiSchema } = this.props;\n    const resolvedSchema = schemaUtils.retrieveSchema(schema, formData);\n    return schemaUtils\n      .getValidator()\n      .validateFormData(formData, resolvedSchema, customValidate, transformErrors, uiSchema);\n  }\n\n  /** Renders any errors contained in the `state` in using the `ErrorList`, if not disabled by `showErrorList`. */\n  renderErrors(registry: Registry<T, S, F>) {\n    const { errors, errorSchema, schema, uiSchema } = this.state;\n    const { formContext } = this.props;\n    const options = getUiOptions<T, S, F>(uiSchema);\n    const ErrorListTemplate = getTemplate<'ErrorListTemplate', T, S, F>('ErrorListTemplate', registry, options);\n\n    if (errors && errors.length) {\n      return (\n        <ErrorListTemplate\n          errors={errors}\n          errorSchema={errorSchema || {}}\n          schema={schema}\n          uiSchema={uiSchema}\n          formContext={formContext}\n          registry={registry}\n        />\n      );\n    }\n    return null;\n  }\n\n  /** Returns the `formData` with only the elements specified in the `fields` list\n   *\n   * @param formData - The data for the `Form`\n   * @param fields - The fields to keep while filtering\n   */\n  getUsedFormData = (formData: T | undefined, fields: string[][]): T | undefined => {\n    // For the case of a single input form\n    if (fields.length === 0 && typeof formData !== 'object') {\n      return formData;\n    }\n\n    // _pick has incorrect type definition, it works with string[][], because lodash/hasIn supports it\n    const data: GenericObjectType = _pick(formData, fields as unknown as string[]);\n    if (Array.isArray(formData)) {\n      return Object.keys(data).map((key: string) => data[key]) as unknown as T;\n    }\n\n    return data as T;\n  };\n\n  /** Returns the list of field names from inspecting the `pathSchema` as well as using the `formData`\n   *\n   * @param pathSchema - The `PathSchema` object for the form\n   * @param [formData] - The form data to use while checking for empty objects/arrays\n   */\n  getFieldNames = (pathSchema: PathSchema<T>, formData?: T): string[][] => {\n    const getAllPaths = (_obj: GenericObjectType, acc: string[][] = [], paths: string[][] = [[]]) => {\n      Object.keys(_obj).forEach((key: string) => {\n        if (typeof _obj[key] === 'object') {\n          const newPaths = paths.map((path) => [...path, key]);\n          // If an object is marked with additionalProperties, all its keys are valid\n          if (_obj[key][RJSF_ADDITONAL_PROPERTIES_FLAG] && _obj[key][NAME_KEY] !== '') {\n            acc.push(_obj[key][NAME_KEY]);\n          } else {\n            getAllPaths(_obj[key], acc, newPaths);\n          }\n        } else if (key === NAME_KEY && _obj[key] !== '') {\n          paths.forEach((path) => {\n            const formValue = _get(formData, path);\n            // adds path to fieldNames if it points to a value\n            // or an empty object/array\n            if (typeof formValue !== 'object' || _isEmpty(formValue)) {\n              acc.push(path);\n            }\n          });\n        }\n      });\n      return acc;\n    };\n\n    return getAllPaths(pathSchema);\n  };\n\n  /** Function to handle changes made to a field in the `Form`. This handler receives an entirely new copy of the\n   * `formData` along with a new `ErrorSchema`. It will first update the `formData` with any missing default fields and\n   * then, if `omitExtraData` and `liveOmit` are turned on, the `formData` will be filterer to remove any extra data not\n   * in a form field. Then, the resulting formData will be validated if required. The state will be updated with the new\n   * updated (potentially filtered) `formData`, any errors that resulted from validation. Finally the `onChange`\n   * callback will be called if specified with the updated state.\n   *\n   * @param formData - The new form data from a change to a field\n   * @param newErrorSchema - The new `ErrorSchema` based on the field change\n   * @param id - The id of the field that caused the change\n   */\n  onChange = (formData: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n    const { extraErrors, omitExtraData, liveOmit, noValidate, liveValidate, onChange } = this.props;\n    const { schemaUtils, schema } = this.state;\n    if (isObject(formData) || Array.isArray(formData)) {\n      const newState = this.getStateFromProps(this.props, formData);\n      formData = newState.formData;\n    }\n\n    const mustValidate = !noValidate && liveValidate;\n    let state: Partial<FormState<T, S, F>> = { formData, schema };\n    let newFormData = formData;\n\n    if (omitExtraData === true && liveOmit === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n      const pathSchema = schemaUtils.toPathSchema(retrievedSchema, '', formData);\n\n      const fieldNames = this.getFieldNames(pathSchema, formData);\n\n      newFormData = this.getUsedFormData(formData, fieldNames);\n      state = {\n        formData: newFormData,\n      };\n    }\n\n    if (mustValidate) {\n      const schemaValidation = this.validate(newFormData);\n      let errors = schemaValidation.errors;\n      let errorSchema = schemaValidation.errorSchema;\n      const schemaValidationErrors = errors;\n      const schemaValidationErrorSchema = errorSchema;\n      if (extraErrors) {\n        const merged = validationDataMerge(schemaValidation, extraErrors);\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      state = {\n        formData: newFormData,\n        errors,\n        errorSchema,\n        schemaValidationErrors,\n        schemaValidationErrorSchema,\n      };\n    } else if (!noValidate && newErrorSchema) {\n      const errorSchema = extraErrors\n        ? (mergeObjects(newErrorSchema, extraErrors, 'preventDuplicates') as ErrorSchema<T>)\n        : newErrorSchema;\n      state = {\n        formData: newFormData,\n        errorSchema: errorSchema,\n        errors: toErrorList(errorSchema),\n      };\n    }\n    this.setState(state as FormState<T, S, F>, () => onChange && onChange({ ...this.state, ...state }, id));\n  };\n\n  /**\n   * Callback function to handle reset form data.\n   * - Reset all fields with default values.\n   * - Reset validations and errors\n   *\n   */\n  reset = () => {\n    const { onChange } = this.props;\n    const newState = this.getStateFromProps(this.props, undefined);\n    const newFormData = newState.formData;\n    const state = {\n      formData: newFormData,\n      errorSchema: {},\n      errors: [] as unknown,\n      schemaValidationErrors: [] as unknown,\n      schemaValidationErrorSchema: {},\n    } as FormState<T, S, F>;\n\n    this.setState(state, () => onChange && onChange({ ...this.state, ...state }));\n  };\n\n  /** Callback function to handle when a field on the form is blurred. Calls the `onBlur` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was blurred\n   * @param data - The data associated with the field that was blurred\n   */\n  onBlur = (id: string, data: any) => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(id, data);\n    }\n  };\n\n  /** Callback function to handle when a field on the form is focused. Calls the `onFocus` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was focused\n   * @param data - The data associated with the field that was focused\n   */\n  onFocus = (id: string, data: any) => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(id, data);\n    }\n  };\n\n  /** Callback function to handle when the form is submitted. First, it prevents the default event behavior. Nothing\n   * happens if the target and currentTarget of the event are not the same. It will omit any extra data in the\n   * `formData` in the state if `omitExtraData` is true. It will validate the resulting `formData`, reporting errors\n   * via the `onError()` callback unless validation is disabled. Finally it will add in any `extraErrors` and then call\n   * back the `onSubmit` callback if it was provided.\n   *\n   * @param event - The submit HTML form event\n   */\n  onSubmit = (event: FormEvent<any>) => {\n    event.preventDefault();\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    event.persist();\n    const { omitExtraData, extraErrors, noValidate, onSubmit } = this.props;\n    let { formData: newFormData } = this.state;\n    const { schema, schemaUtils } = this.state;\n\n    if (omitExtraData === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, newFormData);\n      const pathSchema = schemaUtils.toPathSchema(retrievedSchema, '', newFormData);\n\n      const fieldNames = this.getFieldNames(pathSchema, newFormData);\n\n      newFormData = this.getUsedFormData(newFormData, fieldNames);\n    }\n\n    if (noValidate || this.validateForm()) {\n      // There are no errors generated through schema validation.\n      // Check for user provided errors and update state accordingly.\n      const errorSchema = extraErrors || {};\n      const errors = extraErrors ? toErrorList(extraErrors) : [];\n      this.setState(\n        {\n          formData: newFormData,\n          errors,\n          errorSchema,\n          schemaValidationErrors: [],\n          schemaValidationErrorSchema: {},\n        },\n        () => {\n          if (onSubmit) {\n            onSubmit({ ...this.state, formData: newFormData, status: 'submitted' }, event);\n          }\n        }\n      );\n    }\n  };\n\n  /** Returns the registry for the form */\n  getRegistry(): Registry<T, S, F> {\n    const { translateString: customTranslateString, uiSchema = {} } = this.props;\n    const { schemaUtils } = this.state;\n    const { fields, templates, widgets, formContext, translateString } = getDefaultRegistry<T, S, F>();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      templates: {\n        ...templates,\n        ...this.props.templates,\n        ButtonTemplates: {\n          ...templates.ButtonTemplates,\n          ...this.props.templates?.ButtonTemplates,\n        },\n      },\n      widgets: { ...widgets, ...this.props.widgets },\n      rootSchema: this.props.schema,\n      formContext: this.props.formContext || formContext,\n      schemaUtils,\n      translateString: customTranslateString || translateString,\n      globalUiOptions: uiSchema[UI_GLOBAL_OPTIONS_KEY],\n    };\n  }\n\n  /** Provides a function that can be used to programmatically submit the `Form` */\n  submit() {\n    if (this.formElement.current) {\n      this.formElement.current.dispatchEvent(\n        new CustomEvent('submit', {\n          cancelable: true,\n        })\n      );\n      this.formElement.current.requestSubmit();\n    }\n  }\n\n  /** Attempts to focus on the field associated with the `error`. Uses the `property` field to compute path of the error\n   * field, then, using the `idPrefix` and `idSeparator` converts that path into an id. Then the input element with that\n   * id is attempted to be found using the `formElement` ref. If it is located, then it is focused.\n   *\n   * @param error - The error on which to focus\n   */\n  focusOnError(error: RJSFValidationError) {\n    const { idPrefix = 'root', idSeparator = '_' } = this.props;\n    const { property } = error;\n    const path = _toPath(property);\n    if (path[0] === '') {\n      // Most of the time the `.foo` property results in the first element being empty, so replace it with the idPrefix\n      path[0] = idPrefix;\n    } else {\n      // Otherwise insert the idPrefix into the first location using unshift\n      path.unshift(idPrefix);\n    }\n\n    const elementId = path.join(idSeparator);\n    let field = this.formElement.current.elements[elementId];\n    if (!field) {\n      // if not an exact match, try finding an input starting with the element id (like radio buttons or checkboxes)\n      field = this.formElement.current.querySelector(`input[id^=${elementId}`);\n    }\n    if (field.length) {\n      // If we got a list with length > 0\n      field = field[0];\n    }\n    if (field) {\n      field.focus();\n    }\n  }\n\n  /** Programmatically validate the form. If `onError` is provided, then it will be called with the list of errors the\n   * same way as would happen on form submission.\n   *\n   * @returns - True if the form is valid, false otherwise.\n   */\n  validateForm() {\n    const { extraErrors, focusOnFirstError, onError } = this.props;\n    const { formData } = this.state;\n    const schemaValidation = this.validate(formData);\n    let errors = schemaValidation.errors;\n    let errorSchema = schemaValidation.errorSchema;\n    const schemaValidationErrors = errors;\n    const schemaValidationErrorSchema = errorSchema;\n    if (errors.length > 0) {\n      if (extraErrors) {\n        const merged = validationDataMerge(schemaValidation, extraErrors);\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      if (focusOnFirstError) {\n        if (typeof focusOnFirstError === 'function') {\n          focusOnFirstError(schemaValidation.errors[0]);\n        } else {\n          this.focusOnError(schemaValidation.errors[0]);\n        }\n      }\n      this.setState(\n        {\n          errors,\n          errorSchema,\n          schemaValidationErrors,\n          schemaValidationErrorSchema,\n        },\n        () => {\n          if (onError) {\n            onError(errors);\n          } else {\n            console.error('Form validation failed', errors);\n          }\n        }\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /** Renders the `Form` fields inside the <form> | `tagName` or `_internalFormWrapper`, rendering any errors if\n   * needed along with the submit button or any children of the form.\n   */\n  render() {\n    const {\n      children,\n      id,\n      idPrefix,\n      idSeparator,\n      className = '',\n      tagName,\n      name,\n      method,\n      target,\n      action,\n      autoComplete,\n      enctype,\n      acceptcharset,\n      noHtml5Validate = false,\n      disabled = false,\n      readonly = false,\n      formContext,\n      showErrorList = 'top',\n      _internalFormWrapper,\n    } = this.props;\n\n    const { schema, uiSchema, formData, errorSchema, idSchema } = this.state;\n    const registry = this.getRegistry();\n    const { SchemaField: _SchemaField } = registry.fields;\n    const { SubmitButton } = registry.templates.ButtonTemplates;\n    // The `semantic-ui` and `material-ui` themes have `_internalFormWrapper`s that take an `as` prop that is the\n    // PropTypes.elementType to use for the inner tag, so we'll need to pass `tagName` along if it is provided.\n    // NOTE, the `as` prop is native to `semantic-ui` and is emulated in the `material-ui` theme\n    const as = _internalFormWrapper ? tagName : undefined;\n    const FormTag = _internalFormWrapper || tagName || 'form';\n\n    let { [SUBMIT_BTN_OPTIONS_KEY]: submitOptions = {} } = getUiOptions<T, S, F>(uiSchema);\n    if (disabled) {\n      submitOptions = { ...submitOptions, props: { ...submitOptions.props, disabled: true } };\n    }\n    const submitUiSchema = { [UI_OPTIONS_KEY]: { [SUBMIT_BTN_OPTIONS_KEY]: submitOptions } };\n\n    return (\n      <FormTag\n        className={className ? className : 'rjsf'}\n        id={id}\n        name={name}\n        method={method}\n        target={target}\n        action={action}\n        autoComplete={autoComplete}\n        encType={enctype}\n        acceptCharset={acceptcharset}\n        noValidate={noHtml5Validate}\n        onSubmit={this.onSubmit}\n        as={as}\n        ref={this.formElement}\n      >\n        {showErrorList === 'top' && this.renderErrors(registry)}\n        <_SchemaField\n          name=''\n          schema={schema}\n          uiSchema={uiSchema}\n          errorSchema={errorSchema}\n          idSchema={idSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          formContext={formContext}\n          formData={formData}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n        />\n\n        {children ? children : <SubmitButton uiSchema={submitUiSchema} registry={registry} />}\n        {showErrorList === 'bottom' && this.renderErrors(registry)}\n      </FormTag>\n    );\n  }\n}\n","import { ComponentType, ForwardedRef, forwardRef } from 'react';\nimport Form, { FormProps } from './components/Form';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The properties for the `withTheme` function, essentially a subset of properties from the `FormProps` that can be\n * overridden while creating a theme\n */\nexport type ThemeProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> = Pick<\n  FormProps<T, S, F>,\n  'fields' | 'templates' | 'widgets' | '_internalFormWrapper'\n>;\n\n/** A Higher-Order component that creates a wrapper around a `Form` with the overrides from the `WithThemeProps` */\nexport default function withTheme<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  themeProps: ThemeProps<T, S, F>\n): ComponentType<FormProps<T, S, F>> {\n  return forwardRef(\n    ({ fields, widgets, templates, ...directProps }: FormProps<T, S, F>, ref: ForwardedRef<Form<T, S, F>>) => {\n      fields = { ...themeProps?.fields, ...fields };\n      widgets = { ...themeProps?.widgets, ...widgets };\n      templates = {\n        ...themeProps?.templates,\n        ...templates,\n        ButtonTemplates: {\n          ...themeProps?.templates?.ButtonTemplates,\n          ...templates?.ButtonTemplates,\n        },\n      };\n\n      return (\n        <Form<T, S, F>\n          {...themeProps}\n          {...directProps}\n          fields={fields}\n          widgets={widgets}\n          templates={templates}\n          ref={ref}\n        />\n      );\n    }\n  );\n}\n"],"names":["generateRowId","nanoid","generateKeyedFormData","formData","Array","isArray","map","item","key","keyedToPlainFormData","keyedFormData","keyedItem","ArrayField","_Component","_inheritsLoose","props","_this","call","_getNewFormDataRow","_this$props","schema","registry","schemaUtils","itemSchema","items","isFixedItems","allowAdditionalItems","additionalItems","getDefaultFormState","onAddClick","event","_handleAddClick","onAddIndexClick","index","onCopyIndexClick","preventDefault","onChange","state","newKeyedFormDataRow","cloneDeep","newKeyedFormData","concat","undefined","splice","push","setState","updatedKeyedFormData","onDropIndexClick","_this$props2","errorSchema","newErrorSchema","idx","i","parseInt","set","filter","_","onReorderClick","newIndex","currentTarget","blur","_this$props3","reOrderArray","_newKeyedFormData","slice","onChangeForIndex","value","id","_extends2","_this$props4","arrayData","newFormData","jsonValue","_extends","onSelectChange","_this$props5","idSchema","$id","_props$formData","getDerivedStateFromProps","nextProps","prevState","nextFormData","previousKeyedFormData","length","previousKeyedFormDatum","_proto","prototype","isItemRequired","type","includes","canAddItem","formItems","_this$props6","uiSchema","_getUiOptions","getUiOptions","globalUiOptions","addable","maxItems","render","_this$props7","translateString","ITEMS_KEY","uiOptions","UnsupportedFieldTemplate","getTemplate","_jsx","reason","TranslatableString","MissingItems","isMultiSelect","renderMultiSelect","isCustomWidget","renderCustomWidget","renderFixedArray","isFilesArray","renderFiles","renderNormalArray","_this2","_this$props8","_this$props8$uiSchema","name","_this$props8$disabled","disabled","_this$props8$readonly","readonly","_this$props8$autofocu","autofocus","_this$props8$required","required","onBlur","onFocus","idPrefix","_this$props8$idSepara","idSeparator","rawErrors","title","formContext","_schemaItems","isObject","itemsSchema","retrieveSchema","canAdd","arrayProps","itemCast","itemErrorSchema","itemIdPrefix","itemIdSchema","toIdSchema","renderArrayFieldItem","canMoveUp","canMoveDown","itemData","itemUiSchema","totalItems","className","Template","_ref","_this$props9","_this$props9$disabled","_this$props9$readonly","_this$props9$autofocu","_this$props9$required","hideError","placeholder","_this$props9$formData","widgets","_getUiOptions2","widget","uiTitle","options","_objectWithoutPropertiesLoose","_excluded","Widget","getWidget","label","displayLabel","getDisplayLabel","multiple","hideLabel","_ref2","_this$props10","_this$props10$formDat","_this$props10$disable","_this$props10$readonl","_this$props10$autofoc","_this$props10$require","enumOptions","optionsList","_getUiOptions3","_getUiOptions3$widget","_excluded2","_ref3","_this$props11","_this$props11$disable","_this$props11$readonl","_this$props11$autofoc","_this$props11$require","_this$props11$formDat","_getUiOptions4","_getUiOptions4$widget","_excluded3","_this3","_this$props12","_this$props12$uiSchem","_this$props12$formDat","_this$props12$idSepar","_this$props12$disable","_this$props12$readonl","_this$props12$autofoc","_this$props12$require","_this$props$formData","itemSchemas","additionalSchema","additional","canRemove","_props$canRemove","_this$props13","_registry$fields","fields","ArraySchemaField","SchemaField","ItemSchemaField","_getUiOptions5","_getUiOptions5$ordera","orderable","_getUiOptions5$remova","removable","_getUiOptions5$copyab","copyable","has","moveUp","moveDown","copy","remove","toolbar","Object","keys","some","children","hasCopy","hasToolbar","hasMoveUp","hasMoveDown","hasRemove","_createClass","get","_this$props14","ArrayItemTitle","Component","BooleanField","_getUiOptions$widget","_getUiOptions$label","yes","YesLabel","no","NoLabel","oneOf","option","o","_schema$enum","schemaWithEnumNames","enums","enumNames","every","v","AnyOfField","onOptionChange","_this$state","selectedOption","retrievedOptions","intOption","newOption","oldOption","sanitizeDataForNewSchema","getFieldId","opt","getMatchingOption","componentDidUpdate","prevProps","newState","deepEquals","_newState","matchingOption","discriminator","maybeString","isString","console","warn","getClosestMatchingOption","baseType","_this$props6$disabled","_this$props6$errorSch","_SchemaField","_this$state2","autocomplete","_getUiOptions$title","ERRORS_KEY","fieldErrorSchema","omit","optionSchema","assign","translateEnum","TitleOptionPrefix","OptionPrefix","translateParams","String","_jsxs","isEmpty","trailingCharMatcherWithPrefix","trailingCharMatcher","NumberField","initialValue","_useState","useState","lastValue","setLastValue","StringField","handleChange","useCallback","charAt","processed","match","asNumber","replace","re","RegExp","ObjectField","_len","arguments","args","_key","apply","wasPropertyKeyModified","additionalProperties","onPropertyChange","addedByAdditionalProperties","_extends3","onDropPropertyClick","copiedFormData","unset","getAvailableKey","preferredKey","_getUiOptions$duplica","duplicateKeySuffixSeparator","newKey","onKeyChange","oldValue","_newKeys","_extends4","newKeys","keyValues","renamedObj","handleAddClick","apSchema","REF_KEY","$ref","ANY_OF_KEY","ONE_OF_KEY","getDefaultValue","isRequired","indexOf","NewStringDefault","_uiOptions$title","_uiOptions$descriptio","rawSchema","_this$props6$uiSchema","_this$props6$required","_this$props6$readonly","_schema$properties","properties","schemaProperties","description","orderedProperties","orderProperties","order","err","style","color","Markdown","InvalidObjectField","message","JSON","stringify","templateProps","PROPERTIES_KEY","ADDITIONAL_PROPERTY_FLAG","fieldUiSchema","hidden","fieldIdSchema","content","COMPONENT_TYPES","array","integer","number","object","string","getFieldComponent","field","schemaType","getSchemaType","componentName","anyOf","UnknownFieldType","SchemaFieldRender","_schema","_idSchema","_props$wasPropertyKey","FieldTemplate","DescriptionFieldTemplate","FieldHelpTemplate","FieldErrorTemplate","fieldId","ID_KEY","mergeObjects","handleFieldComponentChange","theId","FieldComponent","Boolean","readOnly","uiSchemaHideError","__errors","UI_OPTIONS_KEY","help","classNames","process","env","NODE_ENV","helpComponent","hasErrors","errorsComponent","errors","fieldProps","descriptionId","rawDescription","rawHelp","join","trim","_AnyOfField","_OneOfField","OneOfField","isReplacingAnyOrOneOf","_Fragment","isSelect","shouldComponentUpdate","_props$disabled","_props$readonly","_props$autofocus","format","defaultWidget","hasWidget","_getUiOptions$placeho","NullField","useEffect","MultiSchemaField","ArrayFieldDescriptionTemplate","_options$label","ArrayFieldItemTemplate","_registry$templates$B","templates","ButtonTemplates","CopyButton","MoveDownButton","MoveUpButton","RemoveButton","btnStyle","flex","paddingLeft","paddingRight","fontWeight","display","justifyContent","onClick","ArrayFieldTemplate","ArrayFieldTitleTemplate","AddButton","itemProps","TitleFieldTemplate","titleId","BaseInputTemplate","onChangeOverride","rest","log","Error","inputProps","getInputProps","inputValue","_onChange","target","emptyValue","_onBlur","_onFocus","autoFocus","list","examples","examplesId","ariaDescribedByIds","example","SubmitButton","_getSubmitButtonOptio","getSubmitButtonOptions","submitText","norender","_getSubmitButtonOptio2","submitButtonProps","IconButton","_props$iconType","iconType","icon","otherProps","buttonTemplates","DescriptionField","ErrorList","ErrorsLabel","error","stack","REQUIRED_FIELD_SYMBOL","Label","htmlFor","WrapIfAdditionalTemplate","_props$errors","errorId","elem","helpId","ObjectFieldTemplate","prop","canExpand","TitleField","UnsupportedField","UnsupportedFieldWithId","UnsupportedFieldWithReason","UnsupportedFieldWithIdAndReason","keyLabel","KeyLabel","defaultValue","border","ErrorListTemplate","rangeOptions","start","stop","pad","readyForChange","values","dateElementProps","time","yearsRange","Date","getFullYear","year","month","day","hour","minute","second","data","range","DateElement","select","rootId","SelectWidget","AltDateWidget","_ref2$time","_ref2$disabled","_ref2$readonly","_ref2$autofocus","_useReducer","useReducer","action","parseDateString","stateValue","toDateString","property","_setState","handleSetNow","nextState","toJSON","handleClear","elemProps","hideNowButton","href","NowLabel","hideClearButton","ClearLabel","AltDateTimeWidget","_ref$time","CheckboxWidget","_options$description","_ref$autofocus","schemaRequiresTrueValue","checked","handleBlur","handleFocus","labelValue","CheckboxesWidget","_ref$options","_ref$options$inline","inline","enumDisabled","checkboxesValues","enumOptionsValueForIndex","enumOptionsIsSelected","itemDisabled","disabledCls","enumOptionsSelectValue","enumOptionsDeselectValue","checkbox","optionId","ColorWidget","DateWidget","DateTimeWidget","utcToLocal","localToUTC","EmailWidget","addNameToDataURL","dataURL","encodeURIComponent","processFile","file","size","Promise","resolve","reject","reader","window","FileReader","onerror","onload","_event$target","result","readAsDataURL","processFiles","files","all","from","FileInfoPreview","fileInfo","src","maxWidth","download","PreviewLabel","FilesInfo","filesInfo","preview","extractFileInfo","dataURLs","_dataURItoBlob","dataURItoBlob","blob","FileWidget","extractedFilesInfo","useMemo","setFilesInfo","then","filesInfoEvent","newValue","accept","filePreview","HiddenWidget","PasswordWidget","RadioWidget","radio","RangeWidget","getValue","selected","_ref$multiple","optEmptyVal","selectedIndexes","enumOptionsIndexForValue","TextareaWidget","_ref4","rows","defaultProps","TextWidget","TimeWidget","URLWidget","UpDownWidget","getDefaultRegistry","rootSchema","englishStringTranslator","Form","formElement","getUsedFormData","_pick","getFieldNames","pathSchema","getAllPaths","_obj","acc","paths","forEach","newPaths","path","RJSF_ADDITONAL_PROPERTIES_FLAG","NAME_KEY","formValue","_get","_isEmpty","extraErrors","omitExtraData","liveOmit","noValidate","liveValidate","getStateFromProps","mustValidate","retrievedSchema","toPathSchema","fieldNames","schemaValidation","validate","schemaValidationErrors","schemaValidationErrorSchema","merged","validationDataMerge","toErrorList","reset","onSubmit","persist","validateForm","status","validator","createRef","UNSAFE_componentWillReceiveProps","inputFormData","edit","doesSchemaUtilsDiffer","createSchemaUtils","getCurrentErrors","currentErrors","shouldRender","altSchemaUtils","customValidate","transformErrors","resolvedSchema","getValidator","validateFormData","renderErrors","_this$state3","getRegistry","_this$props$templates","customTranslateString","_this$props4$uiSchema","_getDefaultRegistry","UI_GLOBAL_OPTIONS_KEY","submit","current","dispatchEvent","CustomEvent","cancelable","requestSubmit","focusOnError","_this$props5$idPrefix","_this$props5$idSepara","_toPath","unshift","elementId","elements","querySelector","focus","focusOnFirstError","onError","_UI_OPTIONS_KEY","_submitUiSchema","_this$props7$classNam","tagName","method","autoComplete","enctype","acceptcharset","_this$props7$noHtml5V","noHtml5Validate","_this$props7$disabled","_this$props7$readonly","_this$props7$showErro","showErrorList","_internalFormWrapper","_this$state4","as","FormTag","_getUiOptions$SUBMIT_","SUBMIT_BTN_OPTIONS_KEY","submitOptions","submitUiSchema","encType","acceptCharset","ref","withTheme","themeProps","forwardRef","_themeProps$templates","_templates","directProps"],"mappings":"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"}